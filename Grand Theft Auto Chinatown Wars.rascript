//- Grand Theft Auto: Chinatown Wars
//- #ID = 9954

//#region Cars
car_admiral = 0x00
car_blista = 0x01
car_dukes = 0x02
car_polmav = 0x03
car_noose_enforcer = 0x04
car_bucaneer = 0x05
car_fire_truck = 0x06
car_rhino = 0x07
car_ambulance = 0x08
car_burrito = 0x09
car_flatbed = 0x0a
car_speeder = 0x0b
car_angel = 0x0c
car_cabbie = 0x0d
car_hellenbach = 0x0e
car_tanker = 0x0f
car_banshee = 0x10
car_comet = 0x11
car_police_patrol = 0x12
car_yankee = 0x13
car_turismo = 0x14
car_cognoscenti = 0x15
car_chavos = 0x16
car_cavalcade = 0x17
car_cavalcade_fxt = 0x18
car_bobcat = 0x19
car_recovery = 0x1a
car_formula_r = 0x1b
car_resolution_x = 0x1c
car_mk_gt9 = 0x1d
car_500_XLR8 = 0x1e
car_style_sr = 0x1f
car_cityscape = 0x20
car_bulldozer = 0x21
car_fbi_rancher = 0x22
car_reefer = 0x23
car_coast_guard_dinghy = 0x24
car_coast_guard_launch = 0x25
car_destroyer = 0x26
car_dinghy = 0x27
car_bus = 0x28
car_resolution_x2 = 0x29
car_gumshoe = 0x2a
car_wet_ski = 0x2b
car_cruiser = 0x2c
car_defender = 0x2d
//0x2e-0x32 = Burrito
car_go_kart = 0x33
//0x34-0x38 = Yankee
car_infernus = 0x39
car_patriot = 0x3a
car_sabre_gt = 0x3b
car_stallion = 0x3c
car_sultan = 0x3d
car_peyote = 0x3e
car_ingot = 0x3f
car_perennial = 0x40
car_hearse = 0x41
car_limo = 0x42
car_admiral2 = 0x43
car_banshee = 0x44
car_burrito2 = 0x45
car_burrito3 = 0x46
car_angel2 = 0x47
car_bobcat2 = 0x48
//49-50 Burritos
car_chavos2 = 0x51
car_cognoscenti2 = 0x52
car_comet = 0x53
car_turismo = 0x54
car_dukes = 0x55
car_cavalcade_fxt2 = 0x56
car_hellenbach = 0x57
car_manana = 0x58
car_ngr_900 = 0x59 //moto
car_alphamail = 0x5a
car_angel3 = 0x5b
car_baggage_handler = 0x5c
car_chopper = 0x5d
car_voodoo = 0x5e
car_sparrow = 0x5f
car_zhouboat = 0x60
car_angel4 = 0x61
car_sanchez = 0x62
car_jetmax = 0x63
car_dragon_wagon = 0x64
car_cognoscenti3 = 0x65
car_recovery2 = 0x66

_cars = {
    car_admiral: "Admiral"
}
//#endregion

//#region Variables
//-Mission order
//--Wu "Kenny" Lee
_Title = 0
_YuJian = 0x344
_PursuitFarse = 0x34d
_UnderTheGun = 0x345 //--Trophy (Ling dies)
_Payback = 0x34e
_TheWheelman = 0x34f
_TricksOfTheTriad = 0x346 //--Trophy (???)
_NaturalBurnKiller = 0x347
_RecruitmentDrive = 0x349
_CarpeDime = 0x348
_StoreWars = 0x34b //--Trophy? (Spanish massacre)
_CopterCarnage = 0x34c
_KennyStrikesBack = 0x34a
_MissedtheBoat = 0x350
_RatRace = 0x351 //--Trophy? (????)

//--Chan Jaoming
_PimpHisRide = 0x352
_WhackTheRacers = 0x353 //--Trophy (Unlocks street races)
_JackinChan = 0x354
_RawDeal = 0x355 //--Trophy? (Going Undercover)
_SaBoatAge = 0x357
_CounterfeitGangster = 0x359
_SlayingWithFire = 0x35c
_ClearthePier = 0x35d //--Trophy?
_ClearthePier2 = 0x35e //--Trophy?

//--Zhou Ming
_StealingtheShow = 0x35f
_Flatliner = 0x362 //--Trophy (Blood, heart)
_BombDisposal = 0x360
_DriventoDestruction = 0x361 //--Trophy? (Crazy shooter in pickup)
_CashandBurn = 0x366
_DragonHaulZ = 0x363
_TheFandomMenace = 0x364 //--Trophy "Ain't No Lady D"
_SoNearYetSonar = 0x365
_HitfromtheTong = 0x367 //--Trophy?

//--Hsin Jaoming
_TrailBlazer = 0x356
_TheOffshoreOffload = 0x358 //--T?
_OneShotOneKill = 0x35b
_ByMyriadsofSwords = 0x35a //--T? (Almost got killed)
_AShadowofDoubt = 0x37b
_FriendorFoe = 0x37c //--T (The village idiot)
_ArmsOutofHarmsWay = 0x37d //--T?
_TheWagesofHsin = 0x37e
_ARudeAwakening = 0x37f //--T? (You Shall Avanze No More)

//--Wade Heston
_TheTowJob = 0x368
_TheTailBaggingtheDogs = 0x36a //--T?
_WeaponsofMassDistraction = 0x369
_StreetofRage = 0x36b
_OperationNorthwood = 0x36f //--T?
_TorpedoRun = 0x36d
_Scrambled = 0x36c //--Put a trophy here
_EvidenceDash = 0x36e //--T?
_WiFind = 0x370
_SaltintheWound = 0x371
_SaltintheWound2 = 0x372

//--Lester Leroc
_DoubleTrouble = 0x377
_FasterPusherMan = 0x378 //--T?
_ConvoyConflict = 0x37a
_SeeNoEvil = 0x379 //--T? (Protect Lester and Meredith)

//--Rudy D'Avanzo
_GraveSituation = 0x373
_StealtheWheels = 0x374 //--T?
_TheWorldsaStooge = 0x376
_Oversights = 0x375 //--T? (Kill Jimmy Capra)

//--Xin Shan (Not unlockable)
_DeadlyXin = 0x381
_XinoftheFather = 0x382

//-Random Encounters
_Selma = 0x310
_Giorgio = 0x311
_Tommy = 0x312
_Guy = 0x313
_Marcy = 0x316
_Cherie = 0x317
_Alonso = 0x315
_Wilhelm = 0x314

//-Oddjobs
_Taxi = 0x2cf
_Vigilante = 0x2ce
_Paramedic = 0x2d0
_Firefighter = 0x02d1
_NoodleRun = 0x2d8
_NoodleRunDukes = 0
_NoodleRunAlgonquin = 2
_FastTracks = 0x2d7
_ExcessDelivery = 0x2da
_ExcessDeliveryAlphaMail = 0
_ExcessDeliveryLibertyState = 1
_HoboTron = 0x2db
_TatooParlor = 0x2e0

_excessDeliveryLocation = {
	_ExcessDeliveryAlphaMail: [0x548, 0x115],
	_ExcessDeliveryLibertyState: [0x339, 0x2A0]
}

//-TimeTrialRaces
_boulevardBoogie = 0x2d3
_dukesDustUp = 0x2d6
_goKar = 0x2d2
_patriotPark = 0x2d5
_wetscapade = 0x2d4

_looseExchange = 0x2e4
_midtownMayhem = 0x2e5
_eastSideEscapade = 0x2e6
_graveyardGroove = 0x2e7
_beachBlitz = 0x2e8
_monumentMania = 0x2e9
_bohanSnake = 0x2ea

_singleTTRaces = [_looseExchange, _midtownMayhem, _eastSideEscapade, 
				_graveyardGroove, _beachBlitz, _monumentMania, _bohanSnake]
				
_pointerTimerOffset = 0x128

_ttMaxScore = {
	_beachBlitz: 39,
	_monumentMania: 39,
	_graveyardGroove: 35,
	_looseExchange: 29,
	_midtownMayhem: 35,
	_eastSideEscapade: 39,
	_bohanSnake: 39
}

//-Street Races
_hiWayTireTourney = 0x2ed
_hwttSchottlerSweep = 0
_hwttBrokerOpen = 1
_hwttDukesDynamo = 2

_smGrandSlam = 0x2ec
_smgsBohanClassic = 0
_smgsBohanRally = 1

_transfenderInvitational = 0x2eb
_tiAlgonquinAutoTrial = 0
_tiStarJunctionCircuit = 1
_tiMiddleParkMotivator = 2

//-Gun Club
_gcGunClub = 0x2d9
_gcPistol = 0
_gcSMG = 1
_gcShotgun = 2
_gcGrenades = 3
_gcSniperRifle = 4

//--Locations, group only
_algonquin = 0
_bohan = 1
_dukes = 2
_broker = 3

//-Rampages
_rmpRampage = 0x2dc

_rmpBrokerFireflyProjects = 0x13
_rmpBrokerFireflyIsland = 0x14
_rmpBrokerOutlookPark = 0x15
_rmpBrokerBeechwoodCityChainsaw = 0x18
_rmpBrokerBeechwoodCityFlamethrower = 0x12

_rmpBohanBoulevard = 0x10
_rmpBohanNorthernGardens = 0x5
_rmpBohanSouthBohanShotgun = 0x1c
_rmpBohanSouthBohanFlamethrower = 0xb

_rmpDukesSteinway = 0x1
_rmpDukesMeadowHills = 0xf
_rmpDukesMeadowsPark = 0xe
_rmpDukesEastIslandCity = 0x0
_rmpDukesWillis = 0x11

_rmpAlgonquinNorthwoodChainsaw = 0x7
_rmpAlgonquinNorthwoodAssault = 0x6
_rmpAlgonquinNorthwoodCarbine = 0x8
_rmpAlgonquinLancaster = 0x9
_rmpAlgonquinMiddlePark = 0xd
_rmpAlgonquinMiddleParkWest = 0x17
_rmpAlgonquinHattonGardens = 0xa
_rmpAlgonquinStarJunction = 0x1a
_rmpAlgonquinWestminster = 0xc
_rmpAlgonquinTheMeatQuarter = 0x4
_rmpAlgonquinCastleGardenCity = 0x19
_rmpAlgonquinLowerEaston = 0x1b
_rmpAlgonquinFishmarketSouth = 0x1d
_rmpAlgonquinColonyIsland = 0x16
_rmpAlgonquinCastleGardens = 0x3
_rmpAlgonquinHappinessIsland = 0x2

_rshRidingShotgun = 0x2dd
_rshIndustrial = 0
_rshWillis = 1
_rshBeechwoodCity = 2
_rshPurgatory = 3
_rshSuffolk = 4

//-Medals
_medals = {
    _Taxi: [0x1f15a4, 0],
    _Vigilante: [0x1f15a4, 2],
    _Paramedic: [0x1f15a4, 4],
    _Firefighter: [0x1f15a4, 6],
	_NoodleRun: {
		_NoodleRunDukes: [0x1f15aa, 0],
		_NoodleRunAlgonquin: [0x1f15aa, 2]
	},
	_FastTracks: [0x1f15a9, 6],
	_HoboTron: [0x1f15ac, 2],
	_TatooParlor: [0x1f15b9, 0],
	_ExcessDelivery: {
		_ExcessDeliveryAlphaMail: [0x1f15ab, 6],
		_ExcessDeliveryLibertyState: [0x1f15ac, 0]
	},
	_boulevardBoogie: {
		0: [0x1f15a6, 0],
		1: [0x1f15a6, 2],
		2: [0x1f15a6, 4],
		3: [0x1f15a6, 6]
	},
	_dukesDustUp: {
		0: [0x1f15a9, 0],
		1: [0x1f15a9, 2],
		2: [0x1f15a9, 4]			
	},
	_goKar: {
		0: [0x1f15a5, 0],
		1: [0x1f15a5, 2],
		2: [0x1f15a5, 4],
		3: [0x1f15a5, 6]
	},
	_patriotPark: {
		0: [0x1f15a8, 0],
		1: [0x1f15a8, 2],
		2: [0x1f15a8, 4],
		3: [0x1f15a8, 6]
	},
	_wetscapade: {
		0: [0x1f15a7, 0],
		1: [0x1f15a7, 2],
		2: [0x1f15a7, 4],
		3: [0x1f15a7, 6]
	},
	_looseExchange: [0x1f15b5, 2],
	_midtownMayhem: [0x1f15b5, 4],
	_eastSideEscapade: [0x1f15b5, 6],
	_graveyardGroove: [0x1f15b6, 0],
	_beachBlitz: [0x1f15b6, 2],
	_monumentMania: [0x1f15b6, 4],
	_bohanSnake: [0x1f15b6, 6],
	_gcGunClub: {
		_gcPistol: [0x1f15aa, 4],
		_gcSMG: [0x1f15aa, 6],
		_gcShotgun: [0x1f15ab, 0],
		_gcGrenades: [0x1f15ab, 2],
		_gcSniperRifle: [0x1f15ab, 4]
	},
	_rmpRampage: {
		_algonquin: {
			_rmpAlgonquinNorthwoodChainsaw: [0x1f15ae, 2],
			_rmpAlgonquinNorthwoodAssault: [0x1f15ae, 0],
			_rmpAlgonquinNorthwoodCarbine: [0x1f15ae, 4],
			_rmpAlgonquinLancaster: [0x1f15ae, 6],
			_rmpAlgonquinMiddlePark: [0x1f15af, 6],
			_rmpAlgonquinMiddleParkWest: [0x1f15b2, 2],
			_rmpAlgonquinHattonGardens: [0x1f15af, 0],
			_rmpAlgonquinStarJunction: [0x1f15b3, 0],
			_rmpAlgonquinWestminster: [0x1f15af, 4],
			_rmpAlgonquinTheMeatQuarter: [0x1f15ad, 4],
			_rmpAlgonquinCastleGardenCity: [0x1f15b2, 6],
			_rmpAlgonquinLowerEaston: [0x1f15b3, 2],
			_rmpAlgonquinFishmarketSouth: [0x1f15b3, 6],
			_rmpAlgonquinColonyIsland: [0x1f15b2, 0],
			_rmpAlgonquinCastleGardens: [0x1f15ad, 2],
			_rmpAlgonquinHappinessIsland: [0x1f15ad, 0]
		},
		_bohan: {
			_rmpBohanBoulevard: [0x1f15b0, 4],
			_rmpBohanNorthernGardens: [0x1f15ad, 6],
			_rmpBohanSouthBohanShotgun: [0x1f15b3, 4],
			_rmpBohanSouthBohanFlamethrower: [0x1f15af, 2]
		},
		_broker: {
			_rmpBrokerFireflyProjects: [0x1f15b1, 2],
			_rmpBrokerFireflyIsland: [0x1f15b1, 4],
			_rmpBrokerOutlookPark: [0x1f15b1, 6],
			_rmpBrokerBeechwoodCityChainsaw: [0x1f15b2, 4],
			_rmpBrokerBeechwoodCityFlamethrower: [0x1f15b1, 0]
		},
		_dukes: {
			_rmpDukesSteinway: [0x1f15ac, 6],
			_rmpDukesMeadowHills: [0x1f15b0, 2],
			_rmpDukesMeadowsPark: [0x1f15b0, 0],
			_rmpDukesEastIslandCity: [0x1f15ac, 4],
			_rmpDukesWillis: [0x1f15b0, 6]
		}
	},
	_rshRidingShotgun: {
		_rshIndustrial: [0x1f15b4, 0],
		_rshWillis: [0x1f15b4, 2],
		_rshBeechwoodCity: [0x1f15b4, 4],
		_rshPurgatory: [0x1f15b4, 6],
		_rshSuffolk: [0x1f15b5, 0]
	},
	_hiWayTireTourney: {
		_hwttSchottlerSweep: [0x1f15b7, 0],
		_hwttBrokerOpen: [0x1f15b7, 2],
		_hwttDukesDynamo: [0x1f15b7, 4]
	},	
	_transfenderInvitational: {
		_tiAlgonquinAutoTrial: [0x1f15b7, 6],
		_tiStarJunctionCircuit: [0x1f15b8, 0],
		_tiMiddleParkMotivator: [0x1f15b8, 2]
	},
	_smGrandSlam: {
		_smgsBohanClassic: [0x1f15b8, 4],
		_smgsBohanRally: [0x1f15b8, 6]
	},
}

_missionsName = {
    _YuJian: "Yu Jian",
    _PursuitFarse: "Pursuit Farse",
    _UnderTheGun: "Under The Gun",
    _Payback: "Payback",
    _TheWheelman: "The Wheelman",
    _TricksOfTheTriad: "Tricks of the Triad",
    _NaturalBurnKiller: "Natural Burn Killer",
    _RecruitmentDrive: "Recruitment Drive",
    _CarpeDime: "Carpe 'Dime'",
    _StoreWars: "Store Wars",
    _CopterCarnage: "Copter Carnage",
    _KennyStrikesBack: "Kenny Strikes Back",
    _MissedtheBoat: "Missed the Boat?",
    _RatRace: "Rat Race",
    _PimpHisRide: "Pimp His Ride",
    _WhackTheRacers: "Whack the Racers",
    _JackinChan: "Jackin' Chan",
    _RawDeal: "Raw Deal",
    _SaBoatAge: "Sa-Boat-Age",
    _CounterfeitGangster: "Counterfeit Gangster",
    _SlayingWithFire: "Slaying With Fire",
    _ClearthePier: "Clear the Pier",
    _StealingtheShow: "Stealing the Show",
    _Flatliner: "Flatliner",
    _BombDisposal: "Bomb Disposal",
    _DriventoDestruction: "Driven to Destruction",
    _CashandBurn: "Cash and Burn",
    _DragonHaulZ: "Dragon Haul Z",
    _TheFandomMenace: "The Fandom Menace",
    _SoNearYetSonar: "So Near, Yet Sonar",
    _HitfromtheTong: "Hit from the Tong",
    _TrailBlazer: "Trail Blazer",
    _TheOffshoreOffload: "The Offshore Offload",
    _OneShotOneKill: "One Shot, One Kill",
    _ByMyriadsofSwords: "By Myriads of Swords",
    _AShadowofDoubt: "A Shadow of Doubt",
    _FriendorFoe: "Friend or Foe?",
    _ArmsOutofHarmsWay: "Arms Out of Harm's Way",
    _TheWagesofHsin: "The Wages of Hsin",
    _ARudeAwakening: "A Rude Awakening",
    _TheTowJob: "The Tow Job",
    _TheTailBaggingtheDogs: "The Tail Bagging the Dogs",
    _WeaponsofMassDistraction: "Weapons of Mass Distraction",
    _StreetofRage: "Street of Rage",
    _OperationNorthwood: "Operation Northwood",
    _TorpedoRun: "Torpedo Run",
    _Scrambled: "Scrambled",
    _EvidenceDash: "Evidence Dash",
    _WiFind: "Wi-Find",
    _SaltintheWound: "Salt in the Wound",
    _DoubleTrouble: "Double Trouble",
    _FasterPusherMan: "Faster Pusher Man! Sell! Sell!",
    _ConvoyConflict: "Convoy Conflict",
    _SeeNoEvil: "See No Evil",
    _GraveSituation: "Grave Situation",
    _StealtheWheels: "Steal the Wheels",
    _TheWorldsaStooge: "The World's a Stooge",
    _Oversights: "Oversights",
    _DeadlyXin: "Deadly Xin",
    _XinoftheFather: "Xin of the Father"
}

//--Characters
_Kenny = 0
_Chan = 1
_Zhou = 2
_Hsin = 3
_Wade = 4
_Lester = 5
_Rudy = 6
_Xin = 7

_characterName = {
    _Kenny: "Wu 'Kenny' Lee",
    _Chan: "Chan Jaoming",
    _Zhou: "Zhou Ming",
    _Hsin: "Hsin Jaoming",
    _Wade: "Wade Heston",
    _Lester: "Lester Leroc",
    _Rudy: "Rudy D'Avanzo",
    _Xin: "Xin Shan",
}

_sidequestsName = {
    _Selma: "Selma",
    _Giorgio: "Giorgio",
    _Tommy: "Tommy",
    _Guy: "Guy",
    _Marcy: "Marcy",
    _Cherie: "Cherie",
    _Alonso: "Alonso",
    _Wilhelm: "Wilhelm",
}

_characterMission = {
	_Kenny: [_YuJian, _PursuitFarse, _UnderTheGun, _Payback, _TheWheelman, _TricksOfTheTriad, _NaturalBurnKiller, _RecruitmentDrive, _CarpeDime, _StoreWars, _CopterCarnage, _KennyStrikesBack, _MissedtheBoat, _RatRace],
	_Chan: [_PimpHisRide, _WhackTheRacers, _JackinChan, _RawDeal, _SaBoatAge, _CounterfeitGangster, _SlayingWithFire, _ClearthePier],
	_Zhou: [_StealingtheShow, _Flatliner, _BombDisposal, _DriventoDestruction, _CashandBurn, _DragonHaulZ, _TheFandomMenace, _SoNearYetSonar, _HitfromtheTong],
	_Hsin: [_TrailBlazer, _TheOffshoreOffload, _OneShotOneKill, _ByMyriadsofSwords, _AShadowofDoubt, _FriendorFoe, _ArmsOutofHarmsWay, _TheWagesofHsin, _ARudeAwakening],
	_Wade: [_TheTowJob, _TheTailBaggingtheDogs, _WeaponsofMassDistraction, _StreetofRage, _OperationNorthwood, _TorpedoRun, _Scrambled, _EvidenceDash, _WiFind, _SaltintheWound],
	_Lester: [_DoubleTrouble, _FasterPusherMan, _ConvoyConflict, _SeeNoEvil],
	_Rudy: [_GraveSituation, _StealtheWheels, _TheWorldsaStooge, _Oversights]
}

_timeTrialId = {
    _YuJian: 0x25, //--Kenny
    _PursuitFarse: 0x2e,
    _UnderTheGun: 0x26,
    _Payback: 0x2f,
    _TheWheelman: 0x30,
    _TricksOfTheTriad: 0x27,
    _NaturalBurnKiller: 0x28,
    _RecruitmentDrive: 0x2a,
    _CarpeDime: 0x29,
    _StoreWars: 0x2c,
    _CopterCarnage: 0x2d,
    _KennyStrikesBack: 0x2b,
    _MissedtheBoat: 0x31,
    _RatRace: 0x32,
    _PimpHisRide: 0x3e, //--Chan
    _WhackTheRacers: 0x3f,
    _JackinChan: 0x40,
    _RawDeal: 0x41,
    _SaBoatAge: 0x42,
    _CounterfeitGangster: 0x43,
    _SlayingWithFire: 0x44,
    _ClearthePier: 0x45,
    _StealingtheShow: 0x4c, //--Zhou
    _Flatliner: 0x4f,
    _BombDisposal: 0x4d,
    _DriventoDestruction: 0x4e,
    _CashandBurn: 0x53,
    _DragonHaulZ: 0x50,
    _TheFandomMenace: 0x51,
    _SoNearYetSonar: 0x52,
    _HitfromtheTong: 0x54,
    _TrailBlazer: 0x47, //--Hsin
    _TheOffshoreOffload: 0x48,
    _OneShotOneKill: 0x4a,
    _ByMyriadsofSwords: 0x49,
    _AShadowofDoubt: 0x59,
    _FriendorFoe: 0x5a,
    _ArmsOutofHarmsWay: 0x5b,
    _TheWagesofHsin: 0x5c,
    _ARudeAwakening: 0x4b,
    _TheTowJob: 0x33, //--Wade
    _TheTailBaggingtheDogs: 0x35,
    _WeaponsofMassDistraction: 0x34,
    _StreetofRage: 0x36,
    _OperationNorthwood: 0x3a,
    _TorpedoRun: 0x38,
    _Scrambled: 0x37,
    _EvidenceDash: 0x39,
    _WiFind: 0x3b,
    _SaltintheWound: 0x3c,
    _DoubleTrouble: 0x55, //--Lester
    _FasterPusherMan: 0x56,
    _ConvoyConflict: 0x58,
    _SeeNoEvil: 0x57,
    _GraveSituation: 0x5d, //--Rudy
    _StealtheWheels: 0x5e,
    _TheWorldsaStooge: 0x60,
    _Oversights: 0x5f,
    _DeadlyXin: 0x61, //--Xin
    _XinoftheFather: 0x62
}

_missionsTrialName = {
    0x25 : "Yu Jian",
    0x2e : "Pursuit Farse",
    0x26 : "Under The Gun",
    0x2f : "Payback",
    0x30 : "The Wheelman",
    0x27 : "Tricks of the Triad",
    0x28 : "Natural Burn Killer",
    0x2a : "Recruitment Drive",
    0x29 : "Carpe 'Dime'",
    0x2c : "Store Wars",
    0x2d : "Copter Carnage",
    0x2b : "Kenny Strikes Back",
    0x31 : "Missed the Boat?",
    0x32 : "Rat Race",
    0x3e : "Pimp His Ride",
    0x3f : "Whack the Racers",
    0x40 : "Jackin' Chan",
    0x41 : "Raw Deal",
    0x42 : "Sa-Boat-Age",
    0x43 : "Counterfeit Gangster",
    0x44 : "Slaying With Fire",
    0x45 : "Clear the Pier",
    0x4c : "Stealing the Show",
    0x4f : "Flatliner",
    0x4d : "Bomb Disposal",
    0x4e : "Driven to Destruction",
    0x53 : "Cash and Burn",
    0x50 : "Dragon Haul Z",
    0x51 : "The Fandom Menace",
    0x52 : "So Near, Yet Sonar",
    0x54 : "Hit from the Tong",
    0x47 : "Trail Blazer",
    0x48 : "The Offshore Offload",
    0x4a : "One Shot, One Kill",
    0x49 : "By Myriads of Swords",
    0x59 : "A Shadow of Doubt",
    0x5a : "Friend or Foe?",
    0x5b : "Arms Out of Harm's Way",
    0x5c : "The Wages of Hsin",
    0x4b : "A Rude Awakening",
    0x33 : "The Tow Job",
    0x35 : "The Tail Bagging the Dogs",
    0x34 : "Weapons of Mass Distraction",
    0x36 : "Street of Rage",
    0x3a : "Operation Northwood",
    0x38 : "Torpedo Run",
    0x37 : "Scrambled",
    0x39 : "Evidence Dash",
    0x3b : "Wi-Find",
    0x3c : "Salt in the Wound",
    0x55 : "Double Trouble",
    0x56 : "Faster Pusher Man! Sell! Sell!",
    0x58 : "Convoy Conflict",
    0x57 : "See No Evil",
    0x5d : "Grave Situation",
    0x5e : "Steal the Wheels",
    0x60 : "The World's a Stooge",
    0x5f : "Oversights",
    0x61 : "Deadly Xin",
    0x62 : "Xin of the Father"
}

_timeTrialMedals = {
    _YuJian: [0x1f12b4, 0], //--Kenny
    _PursuitFarse: [0x1f12b6, 2],
    _UnderTheGun: [0x1f12b4, 2],
    _Payback: [0x1f12b6, 4],
    _TheWheelman: [0x1f12b6, 6],
    _TricksOfTheTriad: [0x1f12b4, 4],
    _NaturalBurnKiller: [0x1f12b4, 6],
    _RecruitmentDrive: [0x1f12b5, 2],
    _CarpeDime: [0x1f12b5, 0],
    _StoreWars: [0x1f12b5, 6],
    _CopterCarnage: [0x1f12b6, 0],
    _KennyStrikesBack: [0x1f12b5, 4],
    _MissedtheBoat: [0x1f12b7, 0],
    _RatRace: [0x1f12b7, 2],
    _PimpHisRide: [0x1f12ba, 2], //--Chan
    _WhackTheRacers: [0x1f12ba, 4],
    _JackinChan: [0x1f12ba, 6],
    _RawDeal: [0x1f12bb, 0],
    _SaBoatAge: [0x1f12bb, 2],
    _CounterfeitGangster: [0x1f12bb, 4],
    _SlayingWithFire: [0x1f12bb, 6],
    _ClearthePier: [0x1f12bc, 0],
    _StealingtheShow: [0x1f12bd, 6], //--Zhou
    _Flatliner: [0x1f12be, 4],
    _BombDisposal: [0x1f12be, 0],
    _DriventoDestruction: [0x1f12be, 2],
    _CashandBurn: [0x1f12bf, 4],
    _DragonHaulZ: [0x1f12be, 6],
    _TheFandomMenace: [0x1f12bf, 0],
    _SoNearYetSonar: [0x1f12bf, 2],
    _HitfromtheTong: [0x1f12bf, 6],
    _TrailBlazer: [0x1f12bc, 4], //--Hsin
    _TheOffshoreOffload: [0x1f12bc, 6],
    _OneShotOneKill: [0x1f12bd, 2],
    _ByMyriadsofSwords: [0x1f12bd, 0],
    _AShadowofDoubt: [0x1f12c1, 0],
    _FriendorFoe: [0x1f12c1, 2],
    _ArmsOutofHarmsWay: [0x1f12c1, 4],
    _TheWagesofHsin: [0x1f12c1, 6],
    _ARudeAwakening: [0x1f12bd, 4],
    _TheTowJob: [0x1f12b7, 4], //--Wade
    _TheTailBaggingtheDogs: [0x1f12b8, 0],
    _WeaponsofMassDistraction: [0x1f12b7, 6],
    _StreetofRage: [0x1f12b8, 2],
    _OperationNorthwood: [0x1f12b9, 2],
    _TorpedoRun: [0x1f12b8, 6],
    _Scrambled: [0x1f12b8, 4],
    _EvidenceDash: [0x1f12b9, 0],
    _WiFind: [0x1f12b9, 4],
    _SaltintheWound: [0x1f12b9, 6],
    _DoubleTrouble: [0x1f12c0, 0], //--Lester
    _FasterPusherMan: [0x1f12c0, 2],
    _ConvoyConflict: [0x1f12c0, 6],
    _SeeNoEvil: [0x1f12c0, 4],
    _GraveSituation: [0x1f12c2, 0], //--Rudy
    _StealtheWheels: [0x1f12c2, 2],
    _TheWorldsaStooge: [0x1f12c2, 6],
    _Oversights: [0x1f12c2, 4],
    _DeadlyXin: [0x1f12c3, 0], //--Xin
    _XinoftheFather: [0x1f12c3, 2]
}

_timeTrialRace = {
    _boulevardBoogie: "Boulevard Boogie TT",
    _dukesDustUp: "Dukes Dust Up TT",
	_goKar: "Go-Kar-TT",
	_patriotPark: "Patriot Park TT",
	_wetscapade: "Wetscapade TT",
	_looseExchange: "Loose Exchange",
	_midtownMayhem: "Midtown Mayhem",
	_eastSideEscapade: "East Side Escapade",
	_graveyardGroove: "Graveyard Groove", 
	_beachBlitz: "Beach Blitz",
	_monumentMania: "Monument Mania",
	_bohanSnake: "Bohan Snake"
}

_oddjobsName = {
	_Taxi: "Taxi",
	_Vigilante: "Vigilante",
	_Paramedic: "Paramedic",
	_Firefighter: "Firefighter",
	_NoodleRun: "Noodle Run",
	_FastTracks: "Fast Tracks",
	_ExcessDelivery: "Excess Delivery",
	_HoboTron: "Hobo Tron",
	_TatooParlor: "Tattoo Parlor"	
}

_noodleRunName = {
    _NoodleRunDukes: "Dukes",
    _NoodleRunAlgonquin: "Algonquin"
}

_excessDeliveryName = {
	_ExcessDeliveryAlphaMail: "Alpha Mail",
	_ExcessDeliveryLibertyState: "Liberty State Delivery"
}

_gunClubName = {
	_gcGunClub: "Liberty City Gun Club",
	_gcPistol: "Pistol",
	_gcSMG: "SMG",
	_gcShotgun: "Shotgun",
	_gcGrenades: "Grenades",
	_gcSniperRifle: "Sniper Rifle"
}
_rampageName = {
	_rmpBrokerFireflyIsland: "Broker - Firefly Island (Twin Pistols)",
	_rmpBrokerFireflyProjects: "Broker - Firefly Projects (Minigun)",
	_rmpBrokerOutlookPark: "Broker - Outlook Park (Micro SMG)",
	_rmpBrokerBeechwoodCityChainsaw: "Broker - Beechwood City (Chainsaw)",
	_rmpBrokerBeechwoodCityFlamethrower: "Broker - Beechwood City (Flamethrower)",
	_rmpBohanBoulevard: "Bohan - Boulevard (Unarmed)",
	_rmpBohanNorthernGardens: "Bohan - Northen Gardens (Flamethrower)",
	_rmpBohanSouthBohanShotgun: "Bohan - South Bohan (Stubby Shotgun)",
	_rmpBohanSouthBohanFlamethrower: "Bohan - South Bohan (Flamethrower)",
	_rmpDukesSteinway: "Dukes - Steinway (Flamethrower)",
	_rmpDukesMeadowHills: "Dukes - Meadow Hills (Micro SMG)",
	_rmpDukesMeadowsPark: "Dukes - Meadows Park (Double Barreled Shotgun)",
	_rmpDukesEastIslandCity: "Dukes - East Island City (Twin Pistols)",
	_rmpDukesWillis: "Dukes - Willis (SMG)",
	_rmpAlgonquinNorthwoodChainsaw: "Algonquin - Northwood (Chainsaw)",
	_rmpAlgonquinNorthwoodAssault: "Algonquin - Northwood (Assault Rifle)",
	_rmpAlgonquinNorthwoodCarbine: "Algonquin - Northwood (Carbine Rifle)",
	_rmpAlgonquinLancaster: "Algonquin - Lancaster (Flamethrower)",
	_rmpAlgonquinMiddlePark: "Algonquin - Middle Park (Shotgun)",
	_rmpAlgonquinMiddleParkWest: "Algonquin - Middle Park West (Flamethrower)",
	_rmpAlgonquinHattonGardens: "Algonquin - Hatton Gardens (Assault Rifle)",
	_rmpAlgonquinStarJunction: "Algonquin - Star Junction (Sword)",
	_rmpAlgonquinWestminster: "Algonquin - Westminster (Stubby Shotgun)",
	_rmpAlgonquinTheMeatQuarter: "Algonquin - The Meat Quarter (RPG)",
	_rmpAlgonquinCastleGardenCity: "Algonquin - Castle Garden City (Carbine Rifle)",
	_rmpAlgonquinLowerEaston: "Algonquin - Lower Easton (Flamethrower)",
	_rmpAlgonquinFishmarketSouth: "Algonquin - Fishmarket South (Assault Rifle)",
	_rmpAlgonquinColonyIsland: "Algonquin - Colony Island (Double Barreled Shotgun)",
	_rmpAlgonquinCastleGardens: "Algonquin - Castle Gardens (Carbine Rifle)",
	_rmpAlgonquinHappinessIsland: "Algonquin - Happniness Island (Minigun)",
}

_locationName = {
	_algonquin: "Algonquin",
	_bohan: "Bohan",
	_broker: "Broker",
	_dukes: "Dukes"
}
_ridingShotgunName = {
	_rshRidingShotgun: "Riding Shotgun",
	_rshIndustrial: "Industrial",
	_rshWillis: "Willis",
	_rshBeechwoodCity: "Beechwood City",
	_rshPurgatory: "Purgatory",
	_rshSuffolk: "Suffolk"
}

_streetRaceName = {
	_hiWayTireTourney: "Hi-Way Tire Tourney",	
	_smGrandSlam: "S&M Grand Slam Races",
	_transfenderInvitational: "Transfender Invitational"
}

_streetRaceCircuitName = {
	_hiWayTireTourney: {
		_hwttSchottlerSweep: "Schottler Sweep",
		_hwttBrokerOpen: "Broker Open",
		_hwttDukesDynamo: "Dukes Dynamo",
	},
	_smGrandSlam: {
		_smgsBohanClassic: "Bohan Classic",
		_smgsBohanRally: "Bohan Rally"
	},
	_transfenderInvitational: {
		_tiAlgonquinAutoTrial: "Algonquin Auto-trial",
		_tiStarJunctionCircuit:	"Star Junction Circuit",
		_tiMiddleParkMotivator: "Middle Park Motivator"
	}
}
//------Ideal values--------Limit values---
_hereBeDragons = [
	[0x91f, -8, 0xfff7, 8], //-[0x917, 0xffff]
	[0x153, 8, 0xfff7, 8], //-[0x15f, 0xffff]
	[0x153, 8, 0x6d2, -8], //--[0x15f, 0x6c5] 
	[0x91f, -8, 0x6d2, -8], //--[0x917, 0x6c5]	
]

//#endregion


//#region Memory Accessors

//--Mission Time Trial
function ttPointer() => tbyte(0x1f1e98)
function ttMissionId() => byte(0x1f1eb8)
function ttControlVariable() => byte(0x1f1ea8)  //-If above pointer turns 0 with this on 0, CAN
function ttMissionNameFromTrialId() => _missionsName[_timeTrialInverseId[ttMissionId()]]

function cancelTimeTrial() => byte(0x34196c) == 0


//--Boulevard Boogie TT
function ttBBRacePointer() => tbyte(0x226fa8)
function ttBBRaceCourse() => byte(0x226f84)
ttBBMaxLaps = byte(0x226f74)
ttBBCurrentLaps = byte(0x226f78)

//--Dukes Dust Up TT
function ttDDURacePointer() => tbyte(0x2278c8)
function ttDDURaceCourse() => byte(0x2278a4)
ttDDURaceMaxLaps = byte(0x227894)
ttDDURaceCurrentLaps = byte(0x227898)

//--Go-Kar-TT
function ttGKRacePointer() => tbyte(0x2281c8)
function ttGKRaceCourse() => byte(0x2281a4)
ttGKMaxLaps = byte(0x228194)
ttGKCurrentLaps = byte(0x228198)

//--Park Patriot TT
function ttPPRacePointer() => tbyte(0x227968)
function ttPPRaceCourse() => byte(0x227944)
ttPPRaceMaxLaps = byte(0x227934)
ttPPRaceCurrentLaps = byte(0x227938)

//--Wetscapade TT
function ttWSRacePointer() => tbyte(0x228c68)
function ttWSRaceCourse() => byte(0x228c44)
ttWSRaceMaxLaps = byte(0x228c34)
ttWSRaceCurrentLaps = byte(0x228c38)


//--Single Course (TT)
_ttSCRacePointer = {
	_beachBlitz: 0x2245dc,
	_monumentMania: 0x2245dc,
	_graveyardGroove: 0x2245bc,
	_looseExchange: 0x22457c,
	_midtownMayhem: 0x2245bc,
	_eastSideEscapade: 0x2245dc,
	_bohanSnake: 0x2245dc
}
function ttSCRacePointer(course) => tbyte(_ttSCRacePointer[course])	

_ttSCRaceCounter = {
	_beachBlitz: 0x2245b8,
	_monumentMania: 0x2245b8,
	_graveyardGroove: 0x224598,
	_looseExchange: 0x224558,
	_midtownMayhem: 0x224598,
	_eastSideEscapade: 0x2245b8,
	_bohanSnake: 0x2245b8
}
function ttSCRaceCounter(course) => byte(_ttSCRaceCounter[course])

//--Noodle Run
function NRPointer() => tbyte(0x228334)
function NRScore() => byte(0x22831c)
function NRCourse() => byte(0x22830c) //-0 = Dukes, 2 = Algonquin
function NRControlVariable() => byte(0x2282fc)  //-If above pointer turns 0 with this on 0, CAN

//--Taxi    
function TXPointer() => tbyte(0x2247f8)
function TXScore() => byte(0x224808)
function TXControlVariable() => byte(0x224914)  //-If above pointer turns 0 with this on 0, CAN

//--Firefighter
function FFPointer() => tbyte(0x22b700)
function FFMaxScore() => byte(0x1f1e5f)

//--Fast Tracks
function FTPointer() => tbyte(0x225384)
function FTControlVariable() => byte(0x225358)
function FTCirclesAll() => byte(0x2252f8) == 0x27 //-0x27 to finish

//--Hobo Tron
function HTPointer() => tbyte(0x227458) //-It actually doesn't point to anything, but acts as a pointer
function HTScore() => word(0x227460)
function HTHighScore() => word(0x227464)
function HTLeaderboardScore() => word(0x1f1c5e)

//--Tatoo Parlor
function TPPointer() => tbyte(0x1e1a40)
function TPScore() => byte(prev(TPPointer()) + 0x104)

//--Excess Delivery
function EDPointer() => tbyte(0x22b798)
function EDOwnDeliveries() => byte(0x22b750)
function EDTotalDeliveries() => byte(0x22b750)
function EDCourse() => byte(0x22b6b1)
function EDTime() => dword(prev(EDPointer()) + _pointerTimerOffset) + dword(prev(EDPointer()) + _pointerTimerOffset)

//--Liberty City Gun Club
function GCPointer() => tbyte(0x23465c)
function GCCourse() => word(0x2344b0)
function GCScore() => byte(0x2344b4)
function GCRedDummies() => byte(0x2344a4)
function GCFinalScore() => word(0x233f58)
function GCBonusSeconds() => byte(0x233f68)
function GCPassingScore() => word(0x233f5c)
function GCStartLeaderboard() => prev(byte(0x233fc0)) == 4 && byte(0x233fc0) == 1
function GCEndLeaderboard() => prev(byte(0x234058)) == 4 && byte(0x234058) == 1

//--Rampages
function RMPPointer() => tbyte(0x227284)
function RMPScore() => word(0x226b40)
function RMPMaxScore() => word(0x226b38)
function RMPIsInCourse(course) => byte(0x226af8) == course && byte(0x226afc) == course

//--Riding Shotgun
function RSHPointer() => tbyte(0x2257b4)
function RSHScore() => word(0x225940)
function RSHMaxScore() => word(0x225944)
function RSHIsInCourse(course) => byte(0x225828) == course
function RSHTime() => word(prev(RSHPointer()) + _pointerTimerOffset)

//--Street Races
function STHiWayTirePointer() => tbyte(0x227d48)
function STHiWayTirePosition() => byte(0x227cdc)
function STHiWayTireCourse() => byte(0x2281b0)
function STHiWayTireCheckpoints() => byte(0x227cd8)
function STHiWayTireFinishFlag() => byte(0x227cd4)
function STHiWayTireTime() => dword(prev(STHiWayTirePointer()) + _pointerTimerOffset)

STSMGrandSlamPointer = tbyte(0x227ac8)
STSMGrandSlamPosition = byte(0x227a5c)
STSMGrandSlamCourse = byte(0x227f30)
STSMGrandSlamCheckpoints = byte(0x227a58)
STSMGrandSlamFinishFlag = byte(0x227a54)
function STSMGrandSlamTime() => word(prev(STSMGrandSlamPointer) + _pointerTimerOffset)

STTransInvitationalPointer = tbyte(0x227fc8)
STTransInvitationalPosition = byte(0x227f5c)
STTransInvitationalCourse = byte(0x228430)
STTransInvitationalCheckpoints = byte(0x227f58)
STTransInvitationalFinishFlag = byte(0x227f54)
function STTransInvitationalTime() => word(prev(STTransInvitationalPointer) + _pointerTimerOffset)

//--Player Values
function health() => byte(0x340cb1)
function armor() => byte(0x340cb2)
function money() => dword(0x341914)
function playtime() => dword(0x1f12c8)
function XLocation() => word(0x1e122c)
function YLocation() => word(0x1e1230)

//--Cameras
//#region Old code, work with official RATools
//--function allCameras() => bitcount(byte(0x1f1590)) + bitcount(byte(0x1f1591)) + bitcount(byte(0x1f1592)) + bitcount(byte(0x1f1593)) + bitcount(byte(0x1f1594)) + bitcount(byte(0x1f1595)) + bitcount(byte(0x1f1596)) + bitcount(byte(0x1f1597)) + bitcount(byte(0x1f1598)) + bitcount(byte(0x1f1599)) + bitcount(byte(0x1f159a)) + bitcount(byte(0x1f159b)) + bit0(0x1f159c) + bit1(0x1f159c) + bit2(0x1f159c) + bit3(0x1f159c)

//--function prevAllCameras() => bitcount(byte(0x1f1590)) + bitcount(byte(0x1f1591)) + bitcount(byte(0x1f1592)) + bitcount(byte(0x1f1593)) + bitcount(byte(0x1f1594)) + bitcount(byte(0x1f1595)) + bitcount(byte(0x1f1596)) + bitcount(byte(0x1f1597)) + bitcount(byte(0x1f1598)) + bitcount(byte(0x1f1599)) + bitcount(byte(0x1f159a)) + bitcount(byte(0x1f159b)) + prev(bit0(0x1f159c)) + prev(bit1(0x1f159c)) + prev(bit2(0x1f159c)) + prev(bit3(0x1f159c))
//#endregion

function allCameras() => bitcount(0x1f1590) + bitcount(0x1f1591) + bitcount(0x1f1592) + bitcount(0x1f1593) + bitcount(0x1f1594) + bitcount(0x1f1595) + bitcount(0x1f1596) + bitcount(0x1f1597) + bitcount(0x1f1598) + bitcount(0x1f1599) + bitcount(0x1f159a) + bitcount(0x1f159b) + bit0(0x1f159c) + bit1(0x1f159c) + bit2(0x1f159c) + bit3(0x1f159c)

function prevAllCameras() => prev(bitcount(0x1f1590)) + prev(bitcount(0x1f1591)) + prev(bitcount(0x1f1592)) + prev(bitcount(0x1f1593)) + prev(bitcount(0x1f1594)) + prev(bitcount(0x1f1595)) + prev(bitcount(0x1f1596)) + prev(bitcount(0x1f1597)) + prev(bitcount(0x1f1598)) + prev(bitcount(0x1f1599)) + prev(bitcount(0x1f159a)) + prev(bitcount(0x1f159b)) + prev(bit0(0x1f159c)) + prev(bit1(0x1f159c)) + prev(bit2(0x1f159c)) + prev(bit3(0x1f159c))

//--Drug Dealers
function allDrugDealers() {
	result = 0
	for index in range(0, 79){
		result = result + bit0(0x1f1d38 + index)
	}
	return result
}

//--Scratch Cards
function allScratchCards(state) {
	result = 0
	for index in range(0, 37){
		if (state == 0){
			result = result + prev(bit0(0x1f1db2 + index))
		}
		else{
			result = result + bit0(0x1f1db2 + index)
		}	
	}
	return result
}

//--Safehouses
function allSafehouses() => bitcount(0x1f158c) + bitcount(0x1f158d) + bit0(0x1f158e) + bit1(0x1f158e) + bit2(0x1f158e) + bit3(0x1f158e) + bit4(0x1f158e)

//--Unique stunt jumps
function allJumps() => bitcount(0x1f15a0) + bitcount(0x1f15a1) + bitcount(0x1f15a2) + bit0(0x1f15a3) + bit1(0x1f15a3) + bit2(0x1f15a3) + bit3(0x1f15a3) + bit4(0x1f15a3) + bit5(0x1f15a3)

function prevAllJumps() => prev(bitcount(0x1f15a0)) + prev(bitcount(0x1f15a1)) + prev(bitcount(0x1f15a2)) + prev(bit0(0x1f15a3)) + prev(bit1(0x1f15a3)) + prev(bit2(0x1f15a3)) + prev(bit3(0x1f15a3)) + prev(bit4(0x1f15a3)) + prev(bit5(0x1f15a3))

//--Trophies
_jeweledBong = byte(0x1f1d00)
_diamondPill = byte(0x1f1d01)
_platinumSyringe = byte(0x1f1d02)
_silverSafe = byte(0x1f1d03)
_woodenSpoon = byte(0x1f1d04)
_goldenBinoculars = byte(0x1f1d05)
_titaniumBriefcase = byte(0x1f1d06)
_jeweledKey = byte(0x1f1d07)

function gotTrophy(address) {	
	return prev(address) == 0 && address == 1
}

//--Other counters
_nearMisses = word(0x1f1338)
_cockroaches = word(0x1f1332)
_moneyPickedUp = tbyte(0x1f130c)
_moneyWonScratch = tbyte(0x1f132c)
_lionsOfFo = byte(0x1f1330)

function currentValue(address, target, margin) => prev(address) >= target - margin && address >= target

//--Missions
currentMission = word(0x1f1c5a)
lastMission = word(0x1f1c5c)

yuJian = byte(0x1f1c90)
pursuitFarse = byte(0x1f1c88)
underTheGun = byte(0x1f1c91)
payback = byte(0x1f1c92)
theWheelman = byte(0x1f1c89)
tricksOfTheTriad = byte(0x1f1c8a) //-(Unlocks Chan Jaoming)
naturalBurnKiller = byte(0x1f1c8c)
recruitmentDrive = byte(0x1f1c8b)

//----Chan Jaoming
pimpHisRide = byte(0x1f1ca1)
whackTheRacers = byte(0x1f1ca2)
jackinChan = byte(0x1f1c8b)

//----Zhou Ming
stealingTheShow = byte(0x1f1cb1)
flatliner = byte(0x1f1caf)

//--Sidequests
alonso = byte(0x1f1cfc)
giorgio = byte(0x1f1cf8)
marcy = byte(0x1f1cfd)
cherie = byte(0x1f1cfe)
tommy = byte(0x1f1cf9)
guy = byte(0x1f1cfa)
selma = byte(0x1f1cf7)
wilhelm = byte(0x1f1cfb)
//#endregion

//#region Functions
function titleOrLoading() => byte(0x21c3f8) == 0
function wasTitleOrLoading() => prev(byte(0x21c3f8)) == 0
function inTimeTrial() => ttPointer() != 0
function hasBeenInTimeTrial() => prev(ttPointer()) != 0
function inMission() => byte(0x21c3f9) == 1
function notInMission() => byte(0x21c3f9) == 0
function startedMission() => prev(byte(0x21c3f9)) == 0 && inMission()
function finishedMission() => prev(byte(0x21c3f9)) == 1 && notInMission()
function finishedStoryMission(mission) => currentMission == mission && prev(lastMission) != mission && lastMission == mission && finishedMission()

function inMissionTimeTrial(mission) => inTimeTrial() && word(0x1f1eb8) == _timeTrialId[mission]

function notCheating() => high4(0x1f138d) + byte(0x1f138e) == 0

function xinting() => high4(0x1f138d) == 0xf && byte(0x1f138e) == 0

function haveGoldMedal(address, index) => bit(index, address) + bit(index + 1, address) == 2
function gotGoldMedal(address, index) => prev(bit(index, address) + bit(index + 1, address)) < 2 && 
                                                haveGoldMedal(address, index)
												
function haveAnyMedal(address, index) => bit(index, address) + bit(index + 1, address) != 0
function gotBronzeMedal(address, index) => prev(bit(index, address) + bit(index + 1, address)) == 0 && 
                                                haveAnyMedal(address, index)
												
function onLocation(coordinates) => XLocation() == coordinates[0] && YLocation() == coordinates[1]
function insideArea(area) {
    trigger = always_true()
	
	if (area[1] < 0){
		trigger = trigger && XLocation() <= area[0]  && XLocation() >= area[0] + area[1]
	}		
	else{
		trigger = trigger && XLocation() >= area[0]  && XLocation() <= area[0] + area[1]
	}
	if (area[3] < 0){
		trigger = trigger && YLocation() <= area[2]  && YLocation() >= area[2] + area[3]
	}		
	else{
		trigger = trigger && YLocation() >= area[2]  && YLocation() <= area[2] + area[3]
	}
		
	return trigger
}

//-CompletedMission
//--Kenny
function completedYuJian() => yuJian == 0
function completedPursuitFarse() => pursuitFarse == 0 && completedYuJian()
function completedUnderTheGun() => underTheGun == 0 && completedPursuitFarse()
function completePayback() => payback == 0 && completedUnderTheGun()
function completeTheWheelman() => theWheelman == 0 && completePayback()
function completeTricksOfTheTriad() => tricksOfTheTriad == 0 && completePayback()
function completeNaturalBurnKiller() => naturalBurnKiller == 0 && completeTricksOfTheTriad()
function completeRecruitmentDrive() => recruitmentDrive <= 2 && completeNaturalBurnKiller()


//--Chang
function completePimpHisRide() => pimpHisRide == 0
function completeWhackTheRacers() => whackTheRacers == 0 && completePimpHisRide()
function completeJackinChan() => jackinChan <= 1 && completeWackTheRacers()

//--Zhou
function completeStealingTheShow() => stealingTheShow == 0
function completeFlatliner() => flatliner == 0 && completeStealingTheShow()

function completedSidequest(sidequest) {
	trigger = currentMission == sidequest
    
	if (sidequest == _Alonso) {
        trigger = trigger && alonso == 1 && prev(alonso) == 0
    }
	if (sidequest == _Giorgio) {
        trigger = trigger && giorgio == 2 && prev(giorgio) == 1
    }
	if (sidequest == _Marcy) {
		trigger = trigger && marcy == 2 && prev(marcy) == 1
	}
	if (sidequest == _Cherie) {
		trigger = trigger && cherie == 1 && prev(cherie) == 0
	}
	if (sidequest == _Tommy) {
		trigger =  trigger && tommy == 2 && prev(tommy) == 1
	}
	if (sidequest == _Guy) {
        trigger = trigger && guy == 1 && prev(guy) == 0
    }
	if (sidequest == _Selma) {
        trigger = trigger && selma == 2 && prev(selma) == 1
    }
	if (sidequest == _Wilhelm) {
		trigger = trigger && wilhelm == 3 && prev(wilhelm) == 2
	}
	return trigger
}

//-Time Trials functions
function lbRaceSTA(race, course) {
    result = currentMission == race && inMission()
    if (race == _boulevardBoogie){
        return result && prev(ttBBRacePointer()) == 0 && ttBBRacePointer() > 0 && ttBBRaceCourse() == course
    }
    if (race == _dukesDustUp){
        return result && prev(ttDDURacePointer()) == 0 && ttDDURacePointer() > 0 && ttDDURaceCourse() == course
    }
	if (race == _goKar){
        return result && prev(ttGKRacePointer()) == 0 && ttGKRacePointer() > 0 && ttGKRaceCourse() == course
    }
	if (race == _patriotPark){
        return result && prev(ttPPRacePointer()) == 0 && ttPPRacePointer() > 0 && ttPPRaceCourse() == course
    }
	if (race == _wetscapade){
        return result && prev(ttWSRacePointer()) == 0 && ttWSRacePointer() > 0 && ttWSRaceCourse() == course
    }
	if (race == _beachBlitz || race == _monumentMania || race == _graveyardGroove || race == _bohanSnake || 
		race == _eastSideEscapade || race == _midtownMayhem || race == _looseExchange){
        return result && prev(ttSCRacePointer(race)) == 0 && ttSCRacePointer(race) > 0
    }
	if (race == _hiWayTireTourney){
        return result && prev(STHiWayTirePointer()) == 0 && STHiWayTirePointer() > 0 && STHiWayTireCourse() == course
    }
	if (race == _smGrandSlam){
        return result && prev(STSMGrandSlamPointer) == 0 && STSMGrandSlamPointer > 0 && STSMGrandSlamCourse == course
    }
	if (race == _transfenderInvitational){
        return result && prev(STTransInvitationalPointer) == 0 && STTransInvitationalPointer > 0 && STTransInvitationalCourse == course
    }
}

function lbRaceCAN(race, course) {
    result = always_false() || !notCheating() || health() == 0 || titleOrLoading()
    if (race == _boulevardBoogie){
        return result || notInMission() || (prev(ttBBRacePointer()) > 0 && ttBBRacePointer() == 0)
    }
    if (race == _dukesDustUp){
        return result || notInMission() || (prev(ttDDURacePointer()) > 0 && ttDDURacePointer() == 0)
    }
	if (race == _goKar){
        return result || notInMission() || (prev(ttGKRacePointer()) > 0 && ttGKRacePointer() == 0)
    }
	if (race == _patriotPark){
        return result || notInMission() || (prev(ttPPRacePointer()) > 0 && ttPPRacePointer() == 0)
    }
	if (race == _wetscapade){
        return result || notInMission() || (prev(ttWSRacePointer()) > 0 && ttWSRacePointer() == 0)
    }
	if (race == _beachBlitz || race == _monumentMania || race == _graveyardGroove || race == _bohanSnake || 
		race == _eastSideEscapade || race == _midtownMayhem || race == _looseExchange){
        return result || (notInMission() && prev(ttSCRacePointer(race)) > 0 && ttSCRacePointer(race) == 0 && ttSCRaceCounter(race) < _ttMaxScore[race])
    }
	if (race == _hiWayTireTourney){
        return result || (notInMission() && prev(STHiWayTirePointer()) > 0 && STHiWayTirePointer() == 0 && STHiWayTireFinishFlag() == 0)		
    }
	if (race == _smGrandSlam){
        return result || (notInMission() && prev(STSMGrandSlamPointer) > 0 && STSMGrandSlamPointer == 0 && STSMGrandSlamFinishFlag == 0)		
    }
	if (race == _transfenderInvitational){
        return result || (notInMission() && prev(STTransInvitationalPointer) > 0 && STTransInvitationalPointer == 0 && STTransInvitationalFinishFlag == 0)		
    }
}

function lbRaceSUB(race, course) {
	result =  health() > 0
    if (race == _boulevardBoogie){
        return result && ttBBMaxLaps == ttBBCurrentLaps
    }
    if (race == _dukesDustUp){
        return result && ttDDURaceMaxLaps == ttDDURaceCurrentLaps
    }
	if (race == _goKar){
        return result && ttGKMaxLaps == ttGKCurrentLaps
    }
	if (race == _patriotPark){
        return result && ttPPRaceMaxLaps == ttPPRaceCurrentLaps
    }
	if (race == _wetscapade){
        return result && ttWSRaceMaxLaps == ttWSRaceCurrentLaps
    }
	if (race == _beachBlitz || race == _monumentMania || race == _graveyardGroove || race == _bohanSnake || 
		race == _eastSideEscapade || race == _midtownMayhem || race == _looseExchange){
        return result && prev(ttSCRacePointer(race)) > 0 && ttSCRacePointer(race) == 0 && ttSCRaceCounter(race) == _ttMaxScore[race]
    }
	if (race == _hiWayTireTourney){
        return result && prev(STHiWayTirePointer()) > 0 && STHiWayTirePointer() == 0 && STHiWayTireFinishFlag() == 1
    }
	if (race == _smGrandSlam){
        return result && prev(STSMGrandSlamPointer) > 0 && STSMGrandSlamPointer == 0 && STSMGrandSlamFinishFlag == 1
    }
	if (race == _transfenderInvitational){
        return result && prev(STTransInvitationalPointer) > 0 && STTransInvitationalPointer == 0 && STTransInvitationalFinishFlag == 1
    }
}

function lbRaceVal(race, course) {
    if (race == _boulevardBoogie){
        return (dword(prev(ttBBRacePointer()) + _pointerTimerOffset) + dword(prev(ttBBRacePointer()) + _pointerTimerOffset))
    }
    if (race == _dukesDustUp){
        return (dword(prev(ttDDURacePointer()) + _pointerTimerOffset) + dword(prev(ttDDURacePointer()) + _pointerTimerOffset))
    }
	if (race == _goKar){
        return (dword(prev(ttGKRacePointer()) + _pointerTimerOffset) + dword(prev(ttGKRacePointer()) + _pointerTimerOffset))
    }
	if (race == _patriotPark){
        return (dword(prev(ttPPRacePointer()) + _pointerTimerOffset) + dword(prev(ttPPRacePointer()) + _pointerTimerOffset))
    }
	if (race == _wetscapade){
        return (dword(prev(ttWSRacePointer()) + _pointerTimerOffset) + dword(prev(ttWSRacePointer()) + _pointerTimerOffset))
    }
	if (race == _beachBlitz || race == _monumentMania || race == _graveyardGroove || race == _bohanSnake || 
		race == _eastSideEscapade || race == _midtownMayhem || race == _looseExchange){
		return (dword(prev(ttSCRacePointer(race)) + _pointerTimerOffset) + dword(prev(ttSCRacePointer(race)) + _pointerTimerOffset))        
    }
	if (race == _hiWayTireTourney){
		return STHiWayTireTime() + STHiWayTireTime()
	}
	if (race == _smGrandSlam){
		return STSMGrandSlamTime() + STSMGrandSlamTime()
	}
	if (race == _transfenderInvitational){
		return STTransInvitationalTime() + STTransInvitationalTime()
	}
}

//#endregion

//#region Achievement Functions
function progressionMissionAchievement(mission, title, points)
{
    description = format("Complete mission: {0}", _missionsName[mission])
	trigger = notCheating() && !inTimeTrial() && finishedStoryMission(mission)
            
    achievement(title = title, points = points, description = description, trigger = trigger)	
}

function twoProgressionMissionAchievement(mission, mission2, title, description, points)
{    
	trigger = notCheating() && !inTimeTrial() && prior(currentMission) == mission && currentMission == mission2 && prev(lastMission) != mission && lastMission == mission && finishedMission()
            
    achievement(title = title, points = points, description = description, trigger = trigger)	
}

function sidequestAchievement(sidequest, title, points)
{
    description = format("Complete {0}'s sidequests", _sidequestsName[sidequest])
	
	trigger = notCheating() && !inTimeTrial() && completedSidequest(sidequest)
            
    achievement(title = title, points = points, description = description, trigger = trigger)	
}

function timeTrialGoldAchievement(mission, points){
	title = _missionsName[mission]
    description = format("Get a Golden dragon on mission {0}", _missionsName[mission])	
    
	missionId = _timeTrialId[mission]
    trigger = hasBeenInTimeTrial() && ttMissionId() == missionId && 
	gotGoldMedal(_timeTrialMedals[mission][0], _timeTrialMedals[mission][1])
				
	if (mission == _DeadlyXin || mission == _XinoftheFather){
		trigger = trigger && xinting()
		title = title + " (DLC)"
		description = description + " (use provided save)"
	}
	else {
		trigger = trigger && notCheating()
	}
	        
    achievement(title = title, points = points, description = description, trigger = trigger)
}

function timeTrialCharacterAchievement(character, title, points){
    description = format("Get at least a Bronze dragon on every mission from {0}", _characterName[character])
    
	conditionsArray = []
	altConditions = always_false()
	
	for mission in _characterMission[character] {
		array_push(conditionsArray, once(haveAnyMedal(_timeTrialMedals[mission][0], _timeTrialMedals[mission][1])))
		altConditions = altConditions || (ttMissionId() == _timeTrialId[mission] && gotBronzeMedal(_timeTrialMedals[mission][0], _timeTrialMedals[mission][1]))
	}
	array_push(conditionsArray, always_false())
	
    trigger = notCheating() && hasBeenInTimeTrial() && never(titleOrLoading()) &&
				measured(tally(length(conditionsArray) - 1, conditionsArray)) && altConditions	
				            
    achievement(title = title, points = points, description = description, trigger = trigger)    
}

function timeTrialChallengeAchievement(points, mission, title, condition) {
    description = format("Finish mission {0} in Time Trial mode {1}", _missionsName[mission], condition)
    trigger = notCheating() && inMissionTimeTrial(mission)
            
    achievement(title = title, points = points, description = description, trigger = trigger)
}

function ttRaceGoldAchievement(trial, title, points){
    description = format("Get Gold medal on every course of {0}", _timeTrialRace[trial])	
    	
	conditionsArray = []
	altConditions = always_false()
	
	for medal in _medals[trial] {
		array_push(conditionsArray, once(haveGoldMedal(_medals[trial][medal][0], _medals[trial][medal][1])))
		altConditions = altConditions || gotGoldMedal(_medals[trial][medal][0], _medals[trial][medal][1])
	}
	array_push(conditionsArray, always_false())
	
    trigger = notCheating() && !inTimeTrial() && currentMission == trial && never(titleOrLoading()) &&
				measured(tally(length(conditionsArray) - 1, conditionsArray)) && altConditions	
	            
    achievement(title = title, points = points, description = description, trigger = trigger)    
}

function ttSingleRaceGoldAchievement(title, points){
    description = format("Get Gold medal on every Non-circuit Time Trials")	
	    	
	conditionsArray = []
	altConditions = always_false()
	
	for trial in _singleTTRaces {
		array_push(conditionsArray, once(haveGoldMedal(_medals[trial][0], _medals[trial][1])))
		altConditions = altConditions || (currentMission == trial && gotGoldMedal(_medals[trial][0], _medals[trial][1]))
	}
	array_push(conditionsArray, always_false())
	
    trigger = notCheating() && !inTimeTrial() && never(titleOrLoading()) &&
				measured(tally(length(conditionsArray) - 1, conditionsArray)) && altConditions	
	            
    achievement(title = title, points = points, description = description, trigger = trigger)    
}

function timeTrialCourseAllAchievement(title, points){
    description = "Get at least Bronze medal on every Time Trial Challenge"	
    
    trigger = notCheating() && !inTimeTrial() && never(titleOrLoading()) &&
				measured(tally(26,
				once(haveAnyMedal(_medals[_boulevardBoogie][0][0], _medals[_boulevardBoogie][0][1])),
				once(haveAnyMedal(_medals[_boulevardBoogie][1][0], _medals[_boulevardBoogie][1][1])),
				once(haveAnyMedal(_medals[_boulevardBoogie][2][0], _medals[_boulevardBoogie][2][1])),
				once(haveAnyMedal(_medals[_boulevardBoogie][3][0], _medals[_boulevardBoogie][3][1])),
				once(haveAnyMedal(_medals[_dukesDustUp][0][0], _medals[_dukesDustUp][0][1])),
				once(haveAnyMedal(_medals[_dukesDustUp][1][0], _medals[_dukesDustUp][1][1])),
				once(haveAnyMedal(_medals[_dukesDustUp][2][0], _medals[_dukesDustUp][2][1])),
				once(haveAnyMedal(_medals[_goKar][0][0], _medals[_goKar][0][1])),
				once(haveAnyMedal(_medals[_goKar][1][0], _medals[_goKar][1][1])),
				once(haveAnyMedal(_medals[_goKar][2][0], _medals[_goKar][2][1])),
				once(haveAnyMedal(_medals[_goKar][3][0], _medals[_goKar][3][1])),
				once(haveAnyMedal(_medals[_patriotPark][0][0], _medals[_patriotPark][0][1])),
				once(haveAnyMedal(_medals[_patriotPark][1][0], _medals[_patriotPark][1][1])),
				once(haveAnyMedal(_medals[_patriotPark][2][0], _medals[_patriotPark][2][1])),
				once(haveAnyMedal(_medals[_patriotPark][3][0], _medals[_patriotPark][3][1])),
				once(haveAnyMedal(_medals[_wetscapade][0][0], _medals[_wetscapade][0][1])),
				once(haveAnyMedal(_medals[_wetscapade][1][0], _medals[_wetscapade][1][1])),
				once(haveAnyMedal(_medals[_wetscapade][2][0], _medals[_wetscapade][2][1])),
				once(haveAnyMedal(_medals[_wetscapade][3][0], _medals[_wetscapade][3][1])),
				once(haveAnyMedal(_medals[_looseExchange][0], _medals[_looseExchange][1])),
				once(haveAnyMedal(_medals[_midtownMayhem][0], _medals[_midtownMayhem][1])),
				once(haveAnyMedal(_medals[_eastSideEscapade][0], _medals[_eastSideEscapade][1])),
				once(haveAnyMedal(_medals[_graveyardGroove][0], _medals[_graveyardGroove][1])),
				once(haveAnyMedal(_medals[_beachBlitz][0], _medals[_beachBlitz][1])),
				once(haveAnyMedal(_medals[_monumentMania][0], _medals[_monumentMania][1])),
				once(haveAnyMedal(_medals[_bohanSnake][0], _medals[_bohanSnake][1])),
				always_false())) &&
				(always_false() ||
					(currentMission == _boulevardBoogie && (
						gotBronzeMedal(_medals[_boulevardBoogie][0][0], _medals[_boulevardBoogie][0][1]) ||
						gotBronzeMedal(_medals[_boulevardBoogie][1][0], _medals[_boulevardBoogie][1][1]) ||
						gotBronzeMedal(_medals[_boulevardBoogie][2][0], _medals[_boulevardBoogie][2][1]) ||
						gotBronzeMedal(_medals[_boulevardBoogie][3][0], _medals[_boulevardBoogie][3][1])
						)
					) ||
					(currentMission == _dukesDustUp && (
						gotBronzeMedal(_medals[_dukesDustUp][0][0], _medals[_dukesDustUp][0][1]) ||
						gotBronzeMedal(_medals[_dukesDustUp][1][0], _medals[_dukesDustUp][1][1]) ||
						gotBronzeMedal(_medals[_dukesDustUp][2][0], _medals[_dukesDustUp][2][1])
						)
					) ||
					(currentMission == _goKar && (
						gotBronzeMedal(_medals[_goKar][0][0], _medals[_goKar][0][1]) ||
						gotBronzeMedal(_medals[_goKar][1][0], _medals[_goKar][1][1]) ||
						gotBronzeMedal(_medals[_goKar][2][0], _medals[_goKar][2][1]) ||
						gotBronzeMedal(_medals[_goKar][3][0], _medals[_goKar][3][1])
						)
					) ||
					(currentMission == _patriotPark && (
						gotBronzeMedal(_medals[_patriotPark][0][0], _medals[_patriotPark][0][1]) ||
						gotBronzeMedal(_medals[_patriotPark][1][0], _medals[_patriotPark][1][1]) ||
						gotBronzeMedal(_medals[_patriotPark][2][0], _medals[_patriotPark][2][1]) ||
						gotBronzeMedal(_medals[_patriotPark][3][0], _medals[_patriotPark][3][1])
						)
					) ||
					(currentMission == _wetscapade && (
						gotBronzeMedal(_medals[_wetscapade][0][0], _medals[_wetscapade][0][1]) ||
						gotBronzeMedal(_medals[_wetscapade][1][0], _medals[_wetscapade][1][1]) ||
						gotBronzeMedal(_medals[_wetscapade][2][0], _medals[_wetscapade][2][1]) ||
						gotBronzeMedal(_medals[_wetscapade][3][0], _medals[_wetscapade][3][1])
						)
					) ||
					(currentMission == _looseExchange &&
						gotBronzeMedal(_medals[_looseExchange][0], _medals[_looseExchange][1])				
					) ||
					(currentMission == _midtownMayhem &&
						gotBronzeMedal(_medals[_midtownMayhem][0], _medals[_midtownMayhem][1])				
					) ||
					(currentMission == _eastSideEscapade &&
						gotBronzeMedal(_medals[_eastSideEscapade][0], _medals[_eastSideEscapade][1])				
					) ||
					(currentMission == _graveyardGroove &&
						gotBronzeMedal(_medals[_graveyardGroove][0], _medals[_graveyardGroove][1])				
					) ||
					(currentMission == _beachBlitz &&
						gotBronzeMedal(_medals[_beachBlitz][0], _medals[_beachBlitz][1])				
					) ||
					(currentMission == _monumentMania &&
						gotBronzeMedal(_medals[_monumentMania][0], _medals[_monumentMania][1])				
					) ||
					(currentMission == _bohanSnake &&
						gotBronzeMedal(_medals[_bohanSnake][0], _medals[_bohanSnake][1])				
					)
				)
				            
    achievement(title = title, points = points, description = description, trigger = trigger)    
}


//--Street Race--
function streetRaceGoldAchievement(race, title, points){
    description = format("Get Gold trophy on every race of {0}", _streetRaceName[race])	
    	
	conditionsArray = []
	altConditions = always_false()
	
	for medal in _medals[race] {
		array_push(conditionsArray, once(haveGoldMedal(_medals[race][medal][0], _medals[race][medal][1])))
		altConditions = altConditions || gotGoldMedal(_medals[race][medal][0], _medals[race][medal][1])
	}
	array_push(conditionsArray, always_false())
	
    trigger = notCheating() && currentMission == race && never(titleOrLoading()) &&
				measured(tally(length(conditionsArray) - 1, conditionsArray),!inTimeTrial()) && altConditions	
	            
    achievement(title = title, points = points, description = description, trigger = trigger)    
}

function streetRaceAllAchievement(title, points){
    description = "Get at least Bronze trophy on every Street Race"	
    
    trigger = notCheating() && !inTimeTrial() && never(titleOrLoading()) &&
				measured(tally(8,
				once(haveAnyMedal(_medals[_hiWayTireTourney][_hwttSchottlerSweep][0], _medals[_hiWayTireTourney][_hwttSchottlerSweep][1])),
				once(haveAnyMedal(_medals[_hiWayTireTourney][_hwttBrokerOpen][0], _medals[_boulevardBoogie][_hwttBrokerOpen][1])),
				once(haveAnyMedal(_medals[_hiWayTireTourney][_hwttDukesDynamo][0], _medals[_boulevardBoogie][_hwttDukesDynamo][1])),
				once(haveAnyMedal(_medals[_transfenderInvitational][_tiAlgonquinAutoTrial][0], _medals[_dukesDustUp][_tiAlgonquinAutoTrial][1])),
				once(haveAnyMedal(_medals[_transfenderInvitational][_tiStarJunctionCircuit][0], _medals[_transfenderInvitational][_tiStarJunctionCircuit][1])),
				once(haveAnyMedal(_medals[_transfenderInvitational][_tiMiddleParkMotivator][0], _medals[_transfenderInvitational][_tiMiddleParkMotivator][1])),
				once(haveAnyMedal(_medals[_smGrandSlam][_smgsBohanClassic][0], _medals[_smGrandSlam][_smgsBohanClassic][1])),
				once(haveAnyMedal(_medals[_smGrandSlam][_smgsBohanRally][0], _medals[_smGrandSlam][_smgsBohanRally][1])),
				always_false())) &&
				(always_false() ||
					(currentMission == _hiWayTireTourney && (
						gotBronzeMedal(_medals[_hiWayTireTourney][_hwttSchottlerSweep][0], _medals[_hiWayTireTourney][_hwttSchottlerSweep][1]) ||
						gotBronzeMedal(_medals[_hiWayTireTourney][_hwttBrokerOpen][0], _medals[_hiWayTireTourney][_hwttBrokerOpen][1]) ||
						gotBronzeMedal(_medals[_hiWayTireTourney][_hwttDukesDynamo][0], _medals[_hiWayTireTourney][_hwttDukesDynamo][1])						
						)
					) ||
					(currentMission == _transfenderInvitational && (
						gotBronzeMedal(_medals[_transfenderInvitational][_tiAlgonquinAutoTrial][0], _medals[_transfenderInvitational][_tiAlgonquinAutoTrial][1]) ||
						gotBronzeMedal(_medals[_transfenderInvitational][_tiStarJunctionCircuit][0], _medals[_transfenderInvitational][_tiStarJunctionCircuit][1]) ||
						gotBronzeMedal(_medals[_transfenderInvitational][_tiMiddleParkMotivator][0], _medals[_transfenderInvitational][_tiMiddleParkMotivator][1])
						)
					) ||
					(currentMission == _smGrandSlam && (
						gotBronzeMedal(_medals[_smGrandSlam][_smgsBohanClassic][0], _medals[_smGrandSlam][_smgsBohanClassic][1]) ||
						gotBronzeMedal(_medals[_smGrandSlam][_smgsBohanRally][0], _medals[_smGrandSlam][_smgsBohanRally][1])
						)
					)					
				)
				            
    achievement(title = title, points = points, description = description, trigger = trigger)    
}



//--Oddjobs--
function oddjobGoldAchievement(job, title, points){
    description = format("Get the Gold medal on the {0} oddjob", _oddjobsName[job])	
    
    trigger = notCheating() && !inTimeTrial() && currentMission == job &&
                gotGoldMedal(_medals[job][0], _medals[job][1])
	        
    achievement(title = title, points = points, description = description, trigger = trigger)    
}

function oddjobx2GoldAchievement(job, title, points){
    description = format("Get the Gold medal on both {0} oddjobs", _oddjobsName[job])	
    
    trigger = notCheating() && !inTimeTrial() && currentMission == job
	
	if (job == _NoodleRun){
		trigger = trigger  && NRPointer() > 0 && 
			haveGoldMedal(_medals[_NoodleRun][_NoodleRunDukes][0], _medals[_NoodleRun][_NoodleRunDukes][1]) && 
			haveGoldMedal(_medals[_NoodleRun][_NoodleRunAlgonquin][0], _medals[_NoodleRun][_NoodleRunAlgonquin][1]) && (always_false() || 
			(NRCourse() == _NoodleRunDukes && gotGoldMedal(_medals[_NoodleRun][_NoodleRunDukes][0], _medals[_NoodleRun][_NoodleRunDukes][1]) ||
			(NRCourse() == _NoodleRunAlgonquin && gotGoldMedal(_medals[_NoodleRun][_NoodleRunAlgonquin][0], _medals[_NoodleRun][_NoodleRunAlgonquin][1]))))
	}
	if (job == _ExcessDelivery){
		trigger = trigger  && prior(EDPointer()) > 0 && 
			haveGoldMedal(_medals[_ExcessDelivery][_ExcessDeliveryAlphaMail][0], _medals[_ExcessDelivery][_ExcessDeliveryAlphaMail][1]) && 
			haveGoldMedal(_medals[_ExcessDelivery][_ExcessDeliveryLibertyState][0], _medals[_ExcessDelivery][_ExcessDeliveryLibertyState][1]) && 
			(always_false() || 
			gotGoldMedal(_medals[_ExcessDelivery][_ExcessDeliveryAlphaMail][0], _medals[_ExcessDelivery][_ExcessDeliveryAlphaMail][1]) ||			
			gotGoldMedal(_medals[_ExcessDelivery][_ExcessDeliveryLibertyState][0], _medals[_ExcessDelivery][_ExcessDeliveryLibertyState][1]))
	}

    achievement(title = title, points = points, description = description, trigger = trigger)    
}

function oddjobAllAchievement(title, points){
    description = "Get at least Bronze medal on every oddjob"	
    
    trigger = notCheating() && !inTimeTrial() && never(titleOrLoading()) &&
				measured(tally(11,
				once(haveAnyMedal(_medals[_Vigilante][0], _medals[_Vigilante][1])),
				once(haveAnyMedal(_medals[_Firefighter][0], _medals[_Firefighter][1])),
				once(haveAnyMedal(_medals[_Paramedic][0], _medals[_Paramedic][1])),
				once(haveAnyMedal(_medals[_Taxi][0], _medals[_Taxi][1])),
				once(haveAnyMedal(_medals[_HoboTron][0], _medals[_HoboTron][1])),
				once(haveAnyMedal(_medals[_FastTracks][0], _medals[_FastTracks][1])),
				once(haveAnyMedal(_medals[_TatooParlor][0], _medals[_TatooParlor][1])),
				once(haveAnyMedal(_medals[_NoodleRun][_NoodleRunDukes][0], _medals[_NoodleRun][_NoodleRunDukes][1])),
				once(haveAnyMedal(_medals[_NoodleRun][_NoodleRunAlgonquin][0], _medals[_NoodleRun][_NoodleRunAlgonquin][1])),
				once(haveAnyMedal(_medals[_ExcessDelivery][_ExcessDeliveryAlphaMail][0], _medals[_ExcessDelivery][_ExcessDeliveryAlphaMail][1])),
				once(haveAnyMedal(_medals[_ExcessDelivery][_ExcessDeliveryLibertyState][0], _medals[_ExcessDelivery][_ExcessDeliveryLibertyState][1])),
				always_false())) &&
				(always_false() ||
					(currentMission == _Vigilante && gotBronzeMedal(_medals[_Vigilante][0], _medals[_Vigilante][1])) ||
					(currentMission == _Firefighter && gotBronzeMedal(_medals[_Firefighter][0], _medals[_Firefighter][1])) ||
					(currentMission == _Paramedic && gotBronzeMedal(_medals[_Paramedic][0], _medals[_Paramedic][1])) ||
					(currentMission == _Taxi && gotBronzeMedal(_medals[_Taxi][0], _medals[_Taxi][1])) ||
					(currentMission == _HoboTron && gotBronzeMedal(_medals[_HoboTron][0], _medals[_HoboTron][1])) ||
					(currentMission == _FastTracks && gotBronzeMedal(_medals[_FastTracks][0], _medals[_FastTracks][1])) ||
					(currentMission == _TatooParlor && gotBronzeMedal(_medals[_TatooParlor][0], _medals[_TatooParlor][1])) ||
					(currentMission == _NoodleRun && 
						gotBronzeMedal(_medals[_NoodleRun][_NoodleRunDukes][0], _medals[_NoodleRun][_NoodleRunDukes][1])) ||
					(currentMission == _NoodleRun && 
						gotBronzeMedal(_medals[_NoodleRun][_NoodleRunAlgonquin][0], _medals[_NoodleRun][_NoodleRunAlgonquin][1])) ||
					(currentMission == _ExcessDelivery && 
						gotBronzeMedal(_medals[_ExcessDelivery][_ExcessDeliveryAlphaMail][0], _medals[_ExcessDelivery][_ExcessDeliveryAlphaMail][1])) ||
					(currentMission == _ExcessDelivery && 
						gotBronzeMedal(_medals[_ExcessDelivery][_ExcessDeliveryLibertyState][0], _medals[_ExcessDelivery][_ExcessDeliveryLibertyState][1]))
				)
				            
    achievement(title = title, points = points, description = description, trigger = trigger)    
}



//--Liberty City Gun Club--
function gunClubGoldAchievement(course, title, points){
    description = format("Get Gold medal on {0} - {1}", _gunClubName[_gcGunClub], _gunClubName[course])	
    
    trigger = notCheating() && !inTimeTrial() && currentMission == _gcGunClub && GCCourse() == course &&
                gotGoldMedal(_medals[_gcGunClub][course][0], _medals[_gcGunClub][course][1])
	        
    achievement(title = title, points = points, description = description, trigger = trigger)
}

function gunClubAllAchievement(title, points){
    description = "Get at least Bronze medal on every weapon at " + _gunClubName[_gcGunClub]	
    
    trigger = notCheating() && !inTimeTrial()  && inMission() && never(titleOrLoading()) && 
				currentMission == _gcGunClub && measured(tally(5,
				once(haveAnyMedal(_medals[_gcGunClub][_gcPistol][0], _medals[_gcGunClub][_gcPistol][1])),
				once(haveAnyMedal(_medals[_gcGunClub][_gcSMG][0], _medals[_gcGunClub][_gcSMG][1])),
				once(haveAnyMedal(_medals[_gcGunClub][_gcShotgun][0], _medals[_gcGunClub][_gcShotgun][1])),
				once(haveAnyMedal(_medals[_gcGunClub][_gcGrenades][0], _medals[_gcGunClub][_gcGrenades][1])),
				once(haveAnyMedal(_medals[_gcGunClub][_gcSniperRifle][0], _medals[_gcGunClub][_gcSniperRifle][1])),				
				always_false())) &&
				(always_false() ||
					(GCCourse() == _gcPistol && 
					gotBronzeMedal(_medals[_gcGunClub][_gcPistol][0], _medals[_gcGunClub][_gcPistol][1])) ||
					(GCCourse() == _gcSMG && 
					gotBronzeMedal(_medals[_gcGunClub][_gcSMG][0], _medals[_gcGunClub][_gcSMG][1])) ||
					(GCCourse() == _gcShotgun && 
					gotBronzeMedal(_medals[_gcGunClub][_gcShotgun][0], _medals[_gcGunClub][_gcShotgun][1])) ||
					(GCCourse() == _gcGrenades && 
					gotBronzeMedal(_medals[_gcGunClub][_gcGrenades][0], _medals[_gcGunClub][_gcGrenades][1])) ||
					(GCCourse() == _gcSniperRifle && 
					gotBronzeMedal(_medals[_gcGunClub][_gcSniperRifle][0], _medals[_gcGunClub][_gcSniperRifle][1]))
				)
				            
    achievement(title = title, points = points, description = description, trigger = trigger)    
}
//--Rampage--
function rampageGoldAchievement(location, title, points) {
	description = format("Get Gold medal on every {0} Rampage", _locationName[location])	
	
	conditionsArray = []
	altConditions = always_false()
	
	for course in _medals[_rmpRampage][location] {
		array_push(conditionsArray, once(haveGoldMedal(_medals[_rmpRampage][location][course][0], _medals[_rmpRampage][location][course][1])))
		altConditions = altConditions || (RMPIsInCourse(course) && gotGoldMedal(_medals[_rmpRampage][location][course][0], _medals[_rmpRampage][location][course][1]))
	}
	array_push(conditionsArray, always_false())
	
    trigger = notCheating() && !inTimeTrial() && currentMission == _rmpRampage && inMission() && never(titleOrLoading()) &&
				measured(tally(length(conditionsArray) - 1, conditionsArray)) && altConditions	
	            
    achievement(title = title, points = points, description = description, trigger = trigger)
}

function rampageAllBronzeAchievement(title, points) {
	description = "Get at least Bronze medal on every Rampage"
	
	conditionsArray = []
	altConditions = always_false()
	
	for location in _medals[_rmpRampage] {
		for course in _medals[_rmpRampage][location] {
			array_push(conditionsArray, once(haveAnyMedal(_medals[_rmpRampage][location][course][0], _medals[_rmpRampage][location][course][1])))
			altConditions = altConditions || (RMPIsInCourse(course) && gotBronzeMedal(_medals[_rmpRampage][location][course][0], _medals[_rmpRampage][location][course][1]))
		}
	}
	
	array_push(conditionsArray, always_false())
	
    trigger = notCheating() && !inTimeTrial() && currentMission == _rmpRampage && inMission() && never(titleOrLoading()) &&
				measured(tally(length(conditionsArray) - 1, conditionsArray)) && altConditions	
	            
    achievement(title = title, points = points, description = description, trigger = trigger)
}

//--Riding Shotgun--
function ridingShotgunGoldAchievement(title, points) {
	description = format("Get Gold medal on every {0}", _ridingShotgunName[_rshRidingShotgun])	
	
	conditionsArray = []
	altConditions = always_false()
	
	for location in _medals[_rshRidingShotgun] {
		array_push(conditionsArray, once(haveGoldMedal(_medals[_rshRidingShotgun][location][0], _medals[_rshRidingShotgun][location][1])))
		altConditions = altConditions || (RSHIsInCourse(location) && gotGoldMedal(_medals[_rshRidingShotgun][location][0], _medals[_rshRidingShotgun][location][1]))
	}
	array_push(conditionsArray, always_false())
	
    trigger = notCheating() && !inTimeTrial() && currentMission == _rshRidingShotgun && inMission() && never(titleOrLoading()) &&
				measured(tally(length(conditionsArray) - 1, conditionsArray)) && altConditions	
	            
    achievement(title = title, points = points, description = description, trigger = trigger)
}

function ridingShotgunBronzeAchievement(title, points) {
	description = format("Get at least Bronze medal on every {0}", _ridingShotgunName[_rshRidingShotgun])	
	
	conditionsArray = []
	altConditions = always_false()
	
	for location in _medals[_rshRidingShotgun] {
		array_push(conditionsArray, once(haveAnyMedal(_medals[_rshRidingShotgun][location][0], _medals[_rshRidingShotgun][location][1])))
		altConditions = altConditions || (RSHIsInCourse(location) && gotBronzeMedal(_medals[_rshRidingShotgun][location][0], _medals[_rshRidingShotgun][location][1]))
	}
	array_push(conditionsArray, always_false())
	
    trigger = notCheating() && !inTimeTrial() && currentMission == _rshRidingShotgun && inMission() && never(titleOrLoading()) &&
				measured(tally(length(conditionsArray) - 1, conditionsArray)) && altConditions	
	            
    achievement(title = title, points = points, description = description, trigger = trigger)
}

//--Completition and Random--
function cameraAchievement(cameras, title, description, points) {
	prevCameras = cameras - 1
		
    trigger = notCheating() && !wasTitleOrLoading() &&
	prevAllCameras() == prevCameras &&
	measured(allCameras() == cameras, !inTimeTrial())

    achievement(title = title, points = points, description = description, trigger = trigger)
}

function trophyAchievement(trophy, title, description, points){
	trigger = notCheating() && !inTimeTrial() && !wasTitleOrLoading() && gotTrophy(trophy)
	            
    achievement(title = title, points = points, description = description, trigger = trigger)
}

function dealerAchievement(index, title, description, points) {
	dealers = 40 * index
	
	trophy = _goldenBinoculars
	if index == 2 {
		trophy = _titaniumBriefcase
	}
	
    trigger = notCheating() && measured(allDrugDealers() == dealers, !inTimeTrial()) && gotTrophy(trophy)
	            
    achievement(title = title, points = points, description = description, trigger = trigger)
}

function safehouseAchievement(title, description, points) {
	trigger = notCheating() && measured(allSafehouses() == 21, !inTimeTrial()) && gotTrophy(_jeweledKey)
	            
    achievement(title = title, points = points, description = description, trigger = trigger)
}

function stuntJumpAchievement(jumps, title, description, points) {
	prevJumps = jumps - 1
		
    trigger = notCheating() && !wasTitleOrLoading() && 
	prevAllJumps() == prevJumps &&
	measured(allJumps() == jumps, !inTimeTrial())

    achievement(title = title, points = points, description = description, trigger = trigger)
}

function numberAchievement(address, target, margin, title, description, points) {
	trigger = notCheating() &&
	prev(address) >= target - margin &&
	prev(address) < target &&
	measured(address >= target, !inTimeTrial())
	
	achievement(title = title, points = points, description = description, trigger = trigger)
}

function scratchCardsAchievement(title, description, points) {
		
    trigger = notCheating() &&
	allScratchCards(0) == 37 &&
	measured(allScratchCards(1) == 38, !inTimeTrial())

    achievement(title = title, points = points, description = description, trigger = trigger)
}
function hereBeDragonsAchievement(title, points) {
	description = "Go to the end of the world to find dragons"
    trigger = notCheating() && always_false()
	
	for item in _hereBeDragons {
		trigger = trigger || insideArea(item)
	}	
            
    achievement(title = title, points = points, description = description, trigger = trigger)
}
//#endregion

//#region LeaderBoards
function timeTrialLeaderboard(mission)
{
    title = _missionsName[mission]
    description = format("Finish {0} in Time Trial mode as fast as you can", title)
    start = prev(ttPointer()) == 0 && ttPointer() > 0 &&
            ttMissionId() == _timeTrialId[mission]
    cancel = prev(ttPointer()) > 0 && ttPointer() == 0 && ttControlVariable() == 0	
    submit = prev(ttPointer()) > 0 && ttPointer() == 0 && ttControlVariable() == 1
    value = dword(prev(ttPointer()) + _pointerTimerOffset) + dword(prev(ttPointer()) + _pointerTimerOffset)
	
	if (mission == _DeadlyXin || mission == _XinoftheFather){
		cancel = cancel || !xinting()		
	}
	else {
		cancel = cancel || !notCheating()
	}
	
    leaderboard(title, description, start, cancel, submit, value, "MILLISECS")
}

function raceTTLeaderboard(race, course)
{
	title = _timeTrialRace[race]
	if (course > 0) {
		title = format("{0} - Course {1}", title, course)
	}    
    description = format("Get the fastest time at {0}", title)
    courseId = course - 1
    start = lbRaceSTA(race, courseId)
    cancel = lbRaceCAN(race, courseId)
    submit = lbRaceSUB(race, courseId)
    value = lbRaceVal(race, courseId)
    leaderboard(title, description, start, cancel, submit, value, "MILLISECS")
}

function streetRaceLeaderboard(race, course)
{		
	title = format("{0} - {1}", _streetRaceName[race], _streetRaceCircuitName[race][course])
	
    description = format("Get the fastest time at {0}", title)    
    start = lbRaceSTA(race, course)
    cancel = lbRaceCAN(race, course)
    submit = lbRaceSUB(race, course)
    value = lbRaceVal(race, course)
    leaderboard(title, description, start, cancel, submit, value, "MILLISECS")
}

function noodleRunLeaderboard(course)
{
    title = format("Noodle Run - {0}", _noodleRunName[course])
    description = format("Get the most deliveries at {0}", title)
    start = currentMission == _NoodleRun && prev(NRPointer()) == 0 && NRPointer() > 0 && NRCourse() == course
    cancel = always_false() || notInMission() || !notCheating() || prev(NRPointer()) > 0 && NRPointer() == 0 && NRControlVariable() == 0
    submit = prev(NRPointer()) > 0 && NRPointer() == 0 && NRControlVariable() == 1
    value = (NRScore())
    leaderboard(title, description, start, cancel, submit, value, "MILLISECS")
}

function taxiLeaderboard()
{
    title = format("Taxi Driver")
    description = format("Get the most fares at {0}", title)
    
    endTaxi = prev(TXPointer()) > 0 && TXPointer() == 0 && TXControlVariable() == 0
	
    start = currentMission == _Taxi && prev(TXPointer()) == 0 && TXPointer() > 0
    cancel = TXScore() == 0 && (notInMission() || !notCheating() || endTaxi)
    submit = prev(TXScore()) > 0 && (notInMission() || endTaxi || (inMission() && TXScore() == 0 && prev(TXScore()) > 0))

    value = (prev(TXScore()))
    leaderboard(title, description, start, cancel, submit, value, "SCORE")
}

function firefighterLeaderboard()
{
    title = format("Firefighter")
    description = format("Get the most jobs done at {0} without cancelling the mission", title)
        
    start = currentMission == _Firefighter && startedMission()
    cancel = (notInMission() && FFMaxScore() == prior(FFMaxScore()) || !notCheating())
    submit = (notInMission() && FFMaxScore() != prior(FFMaxScore()))

    value = repeated(1, FFMaxScore() != prev(FFMaxScore()))
    leaderboard(title, description, start, cancel, submit, value, "SCORE")
}

function fastTracksLeaderboard()
{
    title = format("Fast Tracks")
    description = format("Get the fastest time at {0}", title)
        
    start = currentMission == _FastTracks && prev(FTPointer()) == 0 && FTPointer() > 0
    cancel = always_false() || notInMission() || !notCheating() || prev(FTPointer()) > 0 && FTPointer() == 0 && FTControlVariable() > 0
    submit = inMission() && FTCirclesAll() && prev(FTPointer()) > 0 && FTPointer() == 0 && FTControlVariable() == 0

    value = dword(prev(FTPointer()) + _pointerTimerOffset) + dword(prev(FTPointer()) + _pointerTimerOffset)
    leaderboard(title, description, start, cancel, submit, value, "MILLISECS")
}

function hoboTronLeaderboard()
{
    title = format("Hobo Tron")
    description = format("Get the highest score at {0}", title)
    
	endHoboTron = prev(HTPointer()) > 0 && HTPointer() == 0
    start = currentMission == _HoboTron && inMission() && 
			HTHighScore() == HTLeaderboardScore() &&
			prev(HTPointer()) == 0 && HTPointer() > 0
    cancel = HTScore() == 0 && (notInMission() || !notCheating() || endHoboTron)
    submit = HTScore() > 0 && (notInMission() || endHoboTron)

    value = (HTScore())
    leaderboard(title, description, start, cancel, submit, value, "SCORE")
}

function tatooParlorLeaderboard()
{
    title = format("Tattoo Parlor")
    description = format("Get the most tattoos done at {0}", title)
    
	endTatooParlor = prev(TPPointer()) > 0 && TPPointer() == 0
    start = never(currentMission != _TatooParlor) && never(notInMission()) && once(prev(TPPointer()) == 0) && repeated(10, TPPointer() > 0)
    cancel = TPScore() == 0 && (notInMission() || !notCheating() || endTatooParlor)
    submit = TPScore() > 0 && (notInMission() || endTatooParlor)

    value = (TPScore())
    leaderboard(title, description, start, cancel, submit, value, "SCORE")
}

function excessDeliveryLeaderboard(course)
{
    title = format("Excess Delivery - {0}", _excessDeliveryName[course])
    description = format("Get the fastest time at {0} with 5 successfull deliveries", title)
    start = currentMission == _ExcessDelivery && prev(EDPointer()) == 0 && EDPointer() > 0 && onLocation(_excessDeliveryLocation[course])
    cancel = always_false() || notInMission() || !notCheating() || prev(EDPointer()) > 0 && EDPointer() == 0 && EDOwnDeliveries() < 5
    submit = prev(EDPointer()) > 0 && EDPointer() == 0 && EDOwnDeliveries() == 5
    value = (EDTime())
    leaderboard(title, description, start, cancel, submit, value, "MILLISECS")
}
function gunClubLeaderboard(course)
{
    title = format("{0} - {1}", _gunClubName[_gcGunClub], _gunClubName[course])
    description = format("Get the highest score at {0}", title)
    start = inMission() && currentMission == _gcGunClub && GCCourse() == course && GCStartLeaderboard()
    cancel = always_false() || notInMission() || !notCheating() || titleOrLoading() || (GCEndLeaderboard() && GCFinalScore() < GCPassingScore())
    submit = GCEndLeaderboard() && GCFinalScore() >= GCPassingScore()
    value = GCFinalScore()
    leaderboard(title, description, start, cancel, submit, value, "SCORE")
}
function rampageLeaderboard(course)
{
    title = format("💀 {0}", _rampageName[course])
    description = format("Get the highest score at {0}", title)
	
	startLeaderboard = prev(RMPPointer()) == 0 && RMPPointer() != 0
	endLeaderboard = prev(RMPPointer()) != 0 && RMPPointer() == 0
	
    start = inMission() && currentMission == _rmpRampage && RMPIsInCourse(course) && startLeaderboard
    cancel = always_false() || notInMission() || !notCheating() || titleOrLoading() || health() == 0 || (endLeaderboard && RMPScore() == 0)
    submit = health() > 0 && endLeaderboard && RMPScore() > 0
    value = RMPScore()
    leaderboard(title, description, start, cancel, submit, value, "SCORE")
}
function ridingShotgunLeaderboard(course)
{
    title = format("💀 Riding Shotgun - {0}", _ridingShotgunName[course])
    description = format("Get the highest score at {0}", title)
	
	startLeaderboard = prev(RSHPointer()) == 0 && RSHPointer() != 0
	endLeaderboard = prev(RSHPointer()) != 0 && RSHPointer() == 0
	
    start = inMission() && currentMission == _rshRidingShotgun && RSHIsInCourse(course) && startLeaderboard
    cancel = always_false() || notInMission() || !notCheating() || titleOrLoading() || health() == 0 || (endLeaderboard && RSHTime() > 0)
    submit = health() > 0 && endLeaderboard && RSHTime() == 0
    value = RSHScore()
    leaderboard(title, description, start, cancel, submit, value, "SCORE")
}
//#endregion



//#region Achievements
//-Progression mission achievements
progressionMissionAchievement(_UnderTheGun, "Nice to Meet You", 5)
progressionMissionAchievement(_TricksOfTheTriad, "Supply and Demand, Baby", 5)
progressionMissionAchievement(_WhackTheRacers, "My Number One Number Two", 5)
progressionMissionAchievement(_Flatliner, "Blood Brothers", 5)
progressionMissionAchievement(_RawDeal, "Mr. 'Junior Triad of the Year'", 10)
progressionMissionAchievement(_CopterCarnage, "Some Idiots Never Learn", 5)
progressionMissionAchievement(_StreetofRage, "The Wonsu Nodong", 5)
progressionMissionAchievement(_TheOffshoreOffload, "Land of Opportunity my Ass", 5)
progressionMissionAchievement(_TheFandomMenace, "Ain't No Lady Di", 5)
progressionMissionAchievement(_ByMyriadsofSwords, "Coincidence is a Bitch", 10)
progressionMissionAchievement(_FriendorFoe, "The Village Idiot", 5)
progressionMissionAchievement(_FasterPusherMan, "Selling Other's Shit", 5)
progressionMissionAchievement(_TheWagesofHsin, "Teaching With Discipline", 5)
progressionMissionAchievement(_StealtheWheels, "Grand Theft Auto", 5)
progressionMissionAchievement(_SeeNoEvil, "Fat Lucky Pig", 5)
progressionMissionAchievement(_ARudeAwakening, "No Judgements, Just Payback", 5)
progressionMissionAchievement(_RatRace, "4th Wall Breaker", 5)
twoProgressionMissionAchievement(_ClearthePier, _ClearthePier2, "A Trapped Rat", format("Complete mission: {0}", _missionsName[_ClearthePier]), 5)
progressionMissionAchievement(_HitfromtheTong, "A Long Way to the Ground", 5)

twoProgressionMissionAchievement(_SaltintheWound, _SaltintheWound2, "The Year of the Rat", "Avenge your father's death", 25)

//--Sidequest mission achievements
sidequestAchievement(_Cherie, "Smack My Bitch Up", 2)
sidequestAchievement(_Guy, "A Bumpy Ride", 2)
sidequestAchievement(_Marcy, "A Valuable Life Lesson", 5)
sidequestAchievement(_Tommy, "This is America!", 5)
sidequestAchievement(_Selma, "Love You Not", 5)
sidequestAchievement(_Giorgio, "Giorgio's Hot Dog", 5)
sidequestAchievement(_Alonso, "The Ingenious Stoner", 2)
sidequestAchievement(_Wilhelm, "Goodbye, Buddy", 5)

//-Time Trial gold medals
timeTrialGoldAchievement(_YuJian, 5)
timeTrialGoldAchievement(_PursuitFarse, 5)
timeTrialGoldAchievement(_UnderTheGun, 5)
timeTrialGoldAchievement(_Payback, 5)
timeTrialGoldAchievement(_TheWheelman, 10)
timeTrialGoldAchievement(_TricksOfTheTriad, 5)
timeTrialGoldAchievement(_NaturalBurnKiller, 5)
timeTrialGoldAchievement(_RecruitmentDrive, 10)
timeTrialGoldAchievement(_CarpeDime, 5)
timeTrialGoldAchievement(_StoreWars, 10)
timeTrialGoldAchievement(_CopterCarnage, 5)
timeTrialGoldAchievement(_KennyStrikesBack, 5)
timeTrialGoldAchievement(_MissedtheBoat, 10)
timeTrialGoldAchievement(_RatRace, 5)

timeTrialGoldAchievement(_PimpHisRide, 5)
timeTrialGoldAchievement(_WhackTheRacers, 5)
timeTrialGoldAchievement(_JackinChan, 5)
timeTrialGoldAchievement(_RawDeal, 10)
timeTrialGoldAchievement(_SaBoatAge, 5)
timeTrialGoldAchievement(_CounterfeitGangster, 10)
timeTrialGoldAchievement(_SlayingWithFire, 10)
timeTrialGoldAchievement(_ClearthePier, 10)

timeTrialGoldAchievement(_StealingtheShow, 10)
timeTrialGoldAchievement(_Flatliner, 5)
timeTrialGoldAchievement(_BombDisposal, 10)
timeTrialGoldAchievement(_DriventoDestruction, 10)
timeTrialGoldAchievement(_CashandBurn, 5)
timeTrialGoldAchievement(_DragonHaulZ, 10)
timeTrialGoldAchievement(_TheFandomMenace, 5)
timeTrialGoldAchievement(_SoNearYetSonar, 10)
timeTrialGoldAchievement(_HitfromtheTong, 10)

timeTrialGoldAchievement(_TrailBlazer, 5)
timeTrialGoldAchievement(_TheOffshoreOffload, 10)
timeTrialGoldAchievement(_OneShotOneKill, 5)
timeTrialGoldAchievement(_ByMyriadsofSwords, 10)
timeTrialGoldAchievement(_AShadowofDoubt, 5)
timeTrialGoldAchievement(_FriendorFoe, 10)
timeTrialGoldAchievement(_ArmsOutofHarmsWay, 10)
timeTrialGoldAchievement(_TheWagesofHsin, 5)
timeTrialGoldAchievement(_ARudeAwakening, 10)

timeTrialGoldAchievement(_TheTowJob, 10)
timeTrialGoldAchievement(_TheTailBaggingtheDogs, 10)
timeTrialGoldAchievement(_WeaponsofMassDistraction, 10)
timeTrialGoldAchievement(_StreetofRage, 5)
timeTrialGoldAchievement(_OperationNorthwood, 10)
timeTrialGoldAchievement(_TorpedoRun, 5)
timeTrialGoldAchievement(_Scrambled, 10)
timeTrialGoldAchievement(_EvidenceDash, 5)
timeTrialGoldAchievement(_WiFind, 10)
timeTrialGoldAchievement(_SaltintheWound, 25)

timeTrialGoldAchievement(_DoubleTrouble, 10)
timeTrialGoldAchievement(_FasterPusherMan, 10)
timeTrialGoldAchievement(_ConvoyConflict, 5)
timeTrialGoldAchievement(_SeeNoEvil, 5)

timeTrialGoldAchievement(_GraveSituation, 5)
timeTrialGoldAchievement(_StealtheWheels, 10)
timeTrialGoldAchievement(_TheWorldsaStooge, 10)
timeTrialGoldAchievement(_Oversights, 5)

timeTrialGoldAchievement(_DeadlyXin, 5)
timeTrialGoldAchievement(_XinoftheFather, 10)

//-Time Trial character Bronze medals
timeTrialCharacterAchievement(_Kenny, "Your Loving Uncle", 10)
timeTrialCharacterAchievement(_Chan, "Boss, Idiot, Friend", 10)
timeTrialCharacterAchievement(_Zhou, "An Arrogant Sociopath", 10)
timeTrialCharacterAchievement(_Hsin, "Leader of the Triads", 10)
timeTrialCharacterAchievement(_Wade, "A Junkie Cop", 10)
timeTrialCharacterAchievement(_Lester, "Unorthodox Investigator", 10)
timeTrialCharacterAchievement(_Rudy, "Taken for a Fool", 10)

//-Completition achievements
//--Do all 30 stunt jumps
//-  > Do a stunt jump
stuntJumpAchievement(1, "Wrong Way", "Do a stunt jump", 1)
//-  > Do 10 stunt jumps
stuntJumpAchievement(10, "Right Through the Hole", "Do 10 stunt jumps", 5)
//-  > Do 30 stunt jumps
stuntJumpAchievement(30, "Billboard Beater", "Do 30 stunt jumps", 10)

//--Destroy all 100 security cameras
//-   > Destroy your first camera [I Spy]
cameraAchievement(1, "I Spy", "Destroy your first security camera", 1)
//-   > Destroy 50 cameras [With My Little Eye]
cameraAchievement(50, "With My Little Eye", "Destroy 50 security cameras", 10)
//-   > Destroy 100 cameras [All Cams Must Die]
cameraAchievement(100, "All Cams Must Die", "Destroy 100 security cameras", 25)

//-<<Acquire all eight Safehouse Trophies>>
//-1- [Jeweled Bong] (Deal 30 packages of Weed and Downers)
trophyAchievement(_jeweledBong, "This Is Good Shit", "Deal 30 packages of Weed and Downers", 5)
//-2- [Diamond Pill Box] (Deal 30 packages of Acid and Ecstasy)
trophyAchievement(_diamondPill, "My Medications", "Deal 30 packages of Acid and Ecstasy", 5)
//-3- [Platinum Syringe] (Deal 30 packages of Coke and Heroin)
trophyAchievement(_platinumSyringe, "The Vaccine", "Deal 30 packages of Coke and Heroin", 5)
//-4- [Silver Safe] (Get a $2.000 profit in one single Drug deal)
trophyAchievement(_silverSafe, "Keep It Safe", "Get a $2.000 profit in one single Drug deal", 5)
//-5- [Wooden Spoon] (Lose $500 in one single Drug Deal)
trophyAchievement(_woodenSpoon, "I'm learning here, ok?", "Lose $500 in one single Drug Deal", 1)
//--Find 
//-6-   40 Dealers [Golden Binoculars] (Find 40 Drug dealers around the city)
dealerAchievement(1, "Deal Finder", "Find 40 Drug dealers around the city", 10)
//-7-   80 Dealers [Titanium Briefcase] (Find all the 80 Drug dealers around the city)
dealerAchievement(2, "Master Dealer", "Find all the 80 Drug dealers around the city", 25)
//-8- Adquire 21 safehouses [Jeweled Key to the City] (Own all the Safehouses in Liberty City)
safehouseAchievement("It's Free Real Estate", "Own all the Safehouses in Liberty City", 25)
//-B- Find all scratch card stores
scratchCardsAchievement("Wasting Money 24/7", "Find all Scratch Cards stores", 10)

//--Find The Lions of Fo
numberAchievement(_lionsOfFo, 2, 1, "Lions of Blessing", "Find both Lions of Fo", 10)

//-Complete odd jobs
//--Vigilante Mission. (Gold)
oddjobGoldAchievement(_Vigilante, "I Am The Law", 10)
//--Ambulance Mission. (Gold)
oddjobGoldAchievement(_Paramedic, "Call An Ambulance!", 10)
//--Fire Fighter Mission. (Gold)
oddjobGoldAchievement(_Firefighter, "We Be Burnin'", 10)
//--Taxi Mission. (Gold)
oddjobGoldAchievement(_Taxi, "Crazy Taxi", 10)
//--Tattoo Parlor. (Gold)
oddjobGoldAchievement(_TatooParlor, "Hope That Ages Well", 10)
//--HoboTron. (Gold)
oddjobGoldAchievement(_HoboTron, "Got Change?", 10)
//--Fast Tracks. (Gold)
oddjobGoldAchievement(_FastTracks, "Tank! Tank! Tank!", 10)
//--Noodle Run (Gold) (x2) (0x2d8)
oddjobx2GoldAchievement(_NoodleRun, "Dragon Chow Mein", 10)
//--Excess Delivery (Gold) (x2)
oddjobx2GoldAchievement(_ExcessDelivery, "Priority Shipping Express", 10)
//--Complete all odd jobs with at least Bronze
oddjobAllAchievement("Part-time Worker", 25)

//-All Rampages
//--Get Gold on all Algonquin rampages
rampageGoldAchievement(_algonquin, "The King of Algonquin", 25)
//--Get Gold on all Bohan rampages
rampageGoldAchievement(_bohan, "Burning Bohan", 10)
//--Get Gold on all Dukes rampages
rampageGoldAchievement(_dukes, "Duke Nuker", 10)
//--Get Gold on all Broker rampages
rampageGoldAchievement(_broker, "Broker Breaker", 10)
//--Get at least Bronze on all Rampages
rampageAllBronzeAchievement("License to Kill", 25)

//-All Riding Shotgun Rampages
//--Get at least bronze on all Riding Shotgun rampages
ridingShotgunBronzeAchievement("Hit & Run", 10)
//--Get Gold on all Riding Shotgun rampages
ridingShotgunGoldAchievement("Kill & Run", 25)

//-All Multiple Course Time Trials:
//--Boulevard Boogie TT (Gold)
ttRaceGoldAchievement(_boulevardBoogie, "Blame It On the Boogie", 10)
//--Dukes Dust Up TT (Gold)
ttRaceGoldAchievement(_dukesDustUp, "The Dukes of Hazzard", 10)
//--Go-Kar-TT (Gold)
ttRaceGoldAchievement(_goKar, "Welcome to Ma-li-ao Kart", 10)
//--Patriot Park TT (Gold)
ttRaceGoldAchievement(_patriotPark, "A Ride in the Park", 10)
//--Wetscapade TT (Gold)
ttRaceGoldAchievement(_wetscapade, "Hot Coco", 10)
//-All Single Course Checkpoint races (Gold)
ttSingleRaceGoldAchievement("Pac-Man Driver", 10)
//--All TT Races (Bronze)
timeTrialCourseAllAchievement("Neighbourhood Explorer", 25)

//-All Street Race Tournaments:
//--Transfender Invitational (Gold)
streetRaceGoldAchievement(_hiWayTireTourney, "Hi-Way Tire Tourney Champion", 10)
//--S&M Grand Slam (Gold)
streetRaceGoldAchievement(_transfenderInvitational, "Transfender Invitational Champion", 10)
//--Hi-Way Tire Tourney (Gold)
streetRaceGoldAchievement(_smGrandSlam, "S&M Grand Slam Champion", 10)
//--All Races (Bronze)
streetRaceAllAchievement("Better Than Chan", 10)

//--All five Weapon Ranges at the Liberty City Gun Club:
//--Pistol (Gold)
gunClubGoldAchievement(_gcPistol, "Your Trusty 9mm", 5)
//--SMG (Gold)
gunClubGoldAchievement(_gcSMG, "Say Hello to my Little Friend", 5)
//--Shotgun (Gold)
gunClubGoldAchievement(_gcShotgun, "Get Off My Property", 5)
//--Grenades (Gold)
gunClubGoldAchievement(_gcGrenades, "Catch It", 5)
//--Sniper Rifle (Gold)
gunClubGoldAchievement(_gcSniperRifle, "Right Between the Eyes", 5)
//--All Bronze
gunClubAllAchievement("Liberty City Gun Club Member", 10)

//-Numbers achievements
//--Get 500 Near misses "Reckless Driver"
numberAchievement(_nearMisses, 500, 5, "Reckless Driver", "Get 500 Near misses", 10)
//--Pick up $1000 from the streets "Finders Keepers"
numberAchievement(_moneyPickedUp, 1000, 600, "Finders Keepers", "Pick up $1000 from the streets", 5)
//--Win $2000 from scratch cards "Lucky Scratcher"
numberAchievement(_moneyWonScratch, 2000, 1000, "Lucky Scratcher", "Win $2000 from scratch cards", 5)
//--Kill 20 cockroaches "Squishy Squashy"
numberAchievement(_cockroaches, 20, 2, "Squishy Squashy", "Kill 20 cockroaches", 5)

//-RandomAchievements
//--Steal an Ammunition van (Already done in mission)
hereBeDragonsAchievement("Here Be Dragons", 1)
//#endregion


//#region Rich Presence
rich_presence_conditional_display(titleOrLoading(), "In the Title Screen")

rich_presence_conditional_display(inTimeTrial(), "⏲️ {0}",
	rich_presence_lookup("TT Mission", ttMissionId(), _missionsTrialName))

rich_presence_conditional_display(inMission() && currentMission == _rmpRampage, "💀 {0}",
	rich_presence_lookup("Rampage", byte(0x226af8), _rampageName))
	
rich_presence_conditional_display(inMission() && currentMission == _rshRidingShotgun, "💀 Riding Shotgun - {0}",
	rich_presence_lookup("Riding Shotgun", byte(0x225828), _ridingShotgunName))
	
rich_presence_conditional_display(inMission() && (currentMission == _boulevardBoogie || currentMission == _dukesDustUp || currentMission == _goKar || currentMission == _patriotPark || currentMission == _wetscapade || currentMission == _looseExchange || currentMission == _midtownMayhem || currentMission == _eastSideEscapade || currentMission == _graveyardGroove || currentMission == _beachBlitz || currentMission == _monumentMania || currentMission == _bohanSnake), "🏁 {0}",
	rich_presence_lookup("Time Trial", currentMission, _timeTrialRace))
	
rich_presence_conditional_display(inMission() && (currentMission == _hiWayTireTourney || currentMission == _smGrandSlam || currentMission == _transfenderInvitational), "🏁🏎️ {0}",
	rich_presence_lookup("Street Race", currentMission, _streetRaceName))
	
rich_presence_conditional_display(inMission() && (currentMission == _Taxi || currentMission == _Vigilante || currentMission == _Paramedic || currentMission == _Firefighter || currentMission == _NoodleRun || currentMission == _FastTracks || currentMission == _ExcessDelivery || currentMission == _HoboTron || currentMission == _TatooParlor), "Working part time 💲 {0}",
	rich_presence_lookup("Odd Job", currentMission, _oddjobsName))
	
rich_presence_conditional_display(inMission() && currentMission == _gcGunClub, "🎯 L.C. Gun Club - {0}",
	rich_presence_lookup("Gun Club", GCCourse(), _gunClubName))
	
rich_presence_conditional_display(inMission() && (currentMission == _Selma || currentMission == _Giorgio || currentMission == _Tommy || currentMission == _Guy || currentMission == _Marcy || currentMission == _Cherie || currentMission == _Alonso || currentMission == _Wilhelm), "🧍 Meeting {0}",
	rich_presence_lookup("Sidequest", currentMission, _sidequestsName))
	
rich_presence_conditional_display(inMission(), "Current mission: {0}", rich_presence_lookup("Mission", currentMission, _missionsName))
	
rich_presence_display("Roaming around Liberty City - ➕ {0} 🦺 {1} 💲 {2} 🕰️ {3}",
rich_presence_value("Health", health()),
rich_presence_value("Armor", armor()),
rich_presence_value("Money", money()),
rich_presence_value("Time", playtime(), format="SECS_AS_MINS"))

//-rich_presence_display("A level {0} {1} is exploring {2} ({3})", 
//-    rich_presence_value("Level", byte(tbyte(0x0112F8) + 0x005C)),
//-    rich_presence_lookup("Class", byte(tbyte(0x0112F8) + 0x0079), classes),
//-    rich_presence_lookup("Location", current_location(), locations),
//-    rich_presence_value("Time", playtime(), format="SECS_AS_MINS")
//-)

//#region Leaderboards
//--Mission timetrials
timeTrialLeaderboard(_YuJian)
timeTrialLeaderboard(_PursuitFarse)
timeTrialLeaderboard(_UnderTheGun)
timeTrialLeaderboard(_Payback)
timeTrialLeaderboard(_TheWheelman)
timeTrialLeaderboard(_TricksOfTheTriad)
timeTrialLeaderboard(_NaturalBurnKiller)
timeTrialLeaderboard(_RecruitmentDrive)
timeTrialLeaderboard(_CarpeDime)
timeTrialLeaderboard(_StoreWars)
timeTrialLeaderboard(_CopterCarnage)
timeTrialLeaderboard(_KennyStrikesBack)
timeTrialLeaderboard(_MissedtheBoat)
timeTrialLeaderboard(_RatRace)

timeTrialLeaderboard(_PimpHisRide)
timeTrialLeaderboard(_WhackTheRacers)
timeTrialLeaderboard(_JackinChan)
timeTrialLeaderboard(_RawDeal)
timeTrialLeaderboard(_SaBoatAge)
timeTrialLeaderboard(_CounterfeitGangster)
timeTrialLeaderboard(_SlayingWithFire)
timeTrialLeaderboard(_ClearthePier)

timeTrialLeaderboard(_StealingtheShow)
timeTrialLeaderboard(_Flatliner)
timeTrialLeaderboard(_BombDisposal)
timeTrialLeaderboard(_DriventoDestruction)
timeTrialLeaderboard(_CashandBurn)
timeTrialLeaderboard(_DragonHaulZ)
timeTrialLeaderboard(_TheFandomMenace)
timeTrialLeaderboard(_SoNearYetSonar)
timeTrialLeaderboard(_HitfromtheTong)

timeTrialLeaderboard(_TrailBlazer)
timeTrialLeaderboard(_TheOffshoreOffload)
timeTrialLeaderboard(_OneShotOneKill)
timeTrialLeaderboard(_ByMyriadsofSwords)
timeTrialLeaderboard(_AShadowofDoubt)
timeTrialLeaderboard(_FriendorFoe)
timeTrialLeaderboard(_ArmsOutofHarmsWay)
timeTrialLeaderboard(_TheWagesofHsin)
timeTrialLeaderboard(_ARudeAwakening)

timeTrialLeaderboard(_TheTowJob)
timeTrialLeaderboard(_TheTailBaggingtheDogs)
timeTrialLeaderboard(_WeaponsofMassDistraction)
timeTrialLeaderboard(_StreetofRage)
timeTrialLeaderboard(_OperationNorthwood)
timeTrialLeaderboard(_TorpedoRun)
timeTrialLeaderboard(_Scrambled)
timeTrialLeaderboard(_EvidenceDash)
timeTrialLeaderboard(_WiFind)
timeTrialLeaderboard(_SaltintheWound)

timeTrialLeaderboard(_DoubleTrouble)
timeTrialLeaderboard(_FasterPusherMan)
timeTrialLeaderboard(_ConvoyConflict)
timeTrialLeaderboard(_SeeNoEvil)

timeTrialLeaderboard(_GraveSituation)
timeTrialLeaderboard(_StealtheWheels)
timeTrialLeaderboard(_TheWorldsaStooge)
timeTrialLeaderboard(_Oversights)

timeTrialLeaderboard(_DeadlyXin)
timeTrialLeaderboard(_XinoftheFather)

//--Oddjobs
taxiLeaderboard()
firefighterLeaderboard()
hoboTronLeaderboard()
fastTracksLeaderboard()
noodleRunLeaderboard(_NoodleRunDukes)
noodleRunLeaderboard(_NoodleRunAlgonquin)
excessDeliveryLeaderboard(_ExcessDeliveryAlphaMail)
excessDeliveryLeaderboard(_ExcessDeliveryLibertyState)
tatooParlorLeaderboard()

//--Race timetrials
//--Boulevard Boogie
raceTTLeaderboard(_boulevardBoogie, 1)
raceTTLeaderboard(_boulevardBoogie, 2)
raceTTLeaderboard(_boulevardBoogie, 3)
raceTTLeaderboard(_boulevardBoogie, 4)
//--Dukes Dust Up TT
raceTTLeaderboard(_dukesDustUp, 1)
raceTTLeaderboard(_dukesDustUp, 2)
raceTTLeaderboard(_dukesDustUp, 3)
//--Go-Kar-TT
raceTTLeaderboard(_goKar, 1)
raceTTLeaderboard(_goKar, 2)
raceTTLeaderboard(_goKar, 3)
raceTTLeaderboard(_goKar, 4)
//--Patriot Park TT
raceTTLeaderboard(_patriotPark, 1)
raceTTLeaderboard(_patriotPark, 2)
raceTTLeaderboard(_patriotPark, 3)
raceTTLeaderboard(_patriotPark, 4)
//--Wetscapade TT
raceTTLeaderboard(_wetscapade, 1)
raceTTLeaderboard(_wetscapade, 2)
raceTTLeaderboard(_wetscapade, 3)
raceTTLeaderboard(_wetscapade, 4)
//--Beach Blitz TT
raceTTLeaderboard(_beachBlitz, 0)
//--Monument Mania TT
raceTTLeaderboard(_monumentMania, 0)
//--Graveyard Groove
raceTTLeaderboard(_graveyardGroove, 0)
//--Bohan Snake
raceTTLeaderboard(_bohanSnake, 0)
//--East Side Escapade
raceTTLeaderboard(_eastSideEscapade, 0)
//--Midtown Mayhem
raceTTLeaderboard(_midtownMayhem, 0)
//--Loose Exchange
raceTTLeaderboard(_looseExchange, 0)

//--Street Races
streetRaceLeaderboard(_hiWayTireTourney, _hwttSchottlerSweep)
streetRaceLeaderboard(_hiWayTireTourney, _hwttBrokerOpen)
streetRaceLeaderboard(_hiWayTireTourney, _hwttDukesDynamo)

streetRaceLeaderboard(_smGrandSlam, _smgsBohanClassic)
streetRaceLeaderboard(_smGrandSlam, _smgsBohanRally)

streetRaceLeaderboard(_transfenderInvitational, _tiAlgonquinAutoTrial)
streetRaceLeaderboard(_transfenderInvitational, _tiStarJunctionCircuit)
streetRaceLeaderboard(_transfenderInvitational, _tiMiddleParkMotivator)

//--Gun Club
gunClubLeaderboard(_gcPistol)
gunClubLeaderboard(_gcSMG)
gunClubLeaderboard(_gcShotgun)
gunClubLeaderboard(_gcGrenades)
gunClubLeaderboard(_gcSniperRifle)

//--Rampages
//----Broker
rampageLeaderboard(_rmpBrokerFireflyProjects)
rampageLeaderboard(_rmpBrokerFireflyIsland)
rampageLeaderboard(_rmpBrokerOutlookPark)
rampageLeaderboard(_rmpBrokerBeechwoodCityChainsaw)
rampageLeaderboard(_rmpBrokerBeechwoodCityFlamethrower)
//--Bohan
rampageLeaderboard(_rmpBohanBoulevard)
rampageLeaderboard(_rmpBohanNorthernGardens)
rampageLeaderboard(_rmpBohanSouthBohanShotgun)
rampageLeaderboard(_rmpBohanSouthBohanFlamethrower)
//--Dukes
rampageLeaderboard(_rmpDukesSteinway)
rampageLeaderboard(_rmpDukesMeadowHills)
rampageLeaderboard(_rmpDukesMeadowsPark)
rampageLeaderboard(_rmpDukesEastIslandCity)
rampageLeaderboard(_rmpDukesWillis)
//--Algonquin
rampageLeaderboard(_rmpAlgonquinNorthwoodChainsaw)
rampageLeaderboard(_rmpAlgonquinNorthwoodAssault)
rampageLeaderboard(_rmpAlgonquinNorthwoodCarbine)
rampageLeaderboard(_rmpAlgonquinLancaster)
rampageLeaderboard(_rmpAlgonquinMiddlePark)
rampageLeaderboard(_rmpAlgonquinMiddleParkWest)
rampageLeaderboard(_rmpAlgonquinHattonGardens)
rampageLeaderboard(_rmpAlgonquinStarJunction)
rampageLeaderboard(_rmpAlgonquinWestminster)
rampageLeaderboard(_rmpAlgonquinTheMeatQuarter)
rampageLeaderboard(_rmpAlgonquinCastleGardenCity)
rampageLeaderboard(_rmpAlgonquinLowerEaston)
rampageLeaderboard(_rmpAlgonquinFishmarketSouth)
rampageLeaderboard(_rmpAlgonquinColonyIsland)
rampageLeaderboard(_rmpAlgonquinCastleGardens)
rampageLeaderboard(_rmpAlgonquinHappinessIsland)

//--Riding Shotguns
ridingShotgunLeaderboard(_rshIndustrial)
ridingShotgunLeaderboard(_rshWillis)
ridingShotgunLeaderboard(_rshBeechwoodCity)
ridingShotgunLeaderboard(_rshPurgatory)
ridingShotgunLeaderboard(_rshSuffolk)

//#endregion

//#region Discarded ideas
//--PSP Addresses
//People killed 0xd54bc0
//Current mission 0xd55760 USA  (03ed Yu Yian -> 03f6 Pursuit Farce)
				0xd55860 EUR
//--Pick up 500 weapons "Reuse It, Reshoot It" --Can't find address
//-Time Trial mission challenges achievements------pending
//-timeTrialChallengeAchievement(2, _YuJian, "Good Citizen", "without damaging the car")
//--TheWheelman "without calling the cops attention"
//#endregion
